{"version":3,"sources":["Components/form/radiobutton.js","Components/form/checkBox.js","Components/form/SelectBox.js","Components/Charts/Scatter.js","util/firebase.js","Components/shareBtn/facebookShare.js","Components/axisAverrage/ScatterLineResult.js","Components/component/PartyImage.js","Components/auth/Home.js","App.js","serviceWorker.js","index.js"],"names":["RadioButton","props","React","useState","value","setValue","index","ans","useEffect","id","className","title","FormControl","const","RadioGroup","aria-label","name","onChange","event","target","returnAnswer","answers","map","el","i","FormControlLabel","key","control","Radio","label","message","CheckBox","FormGroup","Checkbox","checked","returnAxisName","useStyles","makeStyles","theme","formControl","minWidth","li","fontSize","SelectBox","classes","open","setOpen","response","disabled","locked","InputLabel","Select","labelId","onClose","onOpen","indexOf","returnAnketsAnswer","MenuItem","paddingBottom","Scatter","color","partyColor","axises","names","symbolSize","data","type","symbol","emphasis","show","formatter","position","push","myAxis","fontWeight","style","height","option","legend","orient","top","left","grid","z","bottom","xAxis","min","max","yAxis","series","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","signInAnonymously","FacebookShareBtn","indexLegends","legends","Object","values","filter","undefined","FacebookShareButton","url","quote","join","compass_url","FacebookIcon","size","ScatterLine","distanceIs","minDistance","Infinity","distance","require","partyAxises","partyAxis","axisAverrage","textAlign","axisName","parseFloat","toFixed","axisPoints","minus","plus","aria-role","width","axisNearest","PartyImage","src","partyName","alt","queryString","Home","state","questions","main_title","gateway","notAnswered","axis_points","total_axis","axis_title_values","axis_values","axis","axis_title","axises_object","axis_names","all_axis","answer_title_values","answer_values","answer_values_males","count_axises","compass_compare","default_axises","all_axis_averrage","batch_axises","onlyTwoCheckBox","showAnswers","questions_on_page","first_questions","anket","anket_all_answers","anketa_questions","anket_answers","axis_legends","legendary","nearestParty","saveData","uid","user","downloadData","urlString","parse","window","location","search","decode","console","log","fetch","then","json","setState","uploadData","method","mode","body","JSON","stringify","headers","success","catch","error","getNotAnswered","pl","elToIntArr","array","forEach","Number","currentQset","slice","idxsOfAnswered","keys","answer","axis_name","getAxisMainTemplate","mainTemplate","length","assign","getAxisTemplate","axis_index","axis_object","template","entries","item","reverse","returnAxis","getAxis","index_question","state_answers","axises_names","axis_count","axs","answer_type","answer_type_index","answer_index","axis_type","axis_type_index","axis_is","sort","Set","difference","lastIndexOf","getAxisAverage","sum","distanceEuclid","positionInfo","axises_object_keys","axises_object_values","axises_idx","item_index","default_axis","axis_idx","idx","legendByAxis","legendsByAxis","legendIs","itIs","indexAxisByName","saving_data","answ","answerIdx","part","male","old","distric","axises_averrage","db","firestore","collection","currentUser","onAuthStateChanged","doc","set","signInWithGoogleUser","this","questionList","type_answers","index_type","checkbox","topFunction","document","scrollTop","documentElement","nextAndScrollTop","whichNotAnswered","getElementById","scrollIntoView","behavior","block","previousAndScrollTop","userIs","onClick","result","d","minIs","partyLink","parties_image_name","href","about_parties","resultParty","chart","forms","Component","App","ReactGa","initialize","pageview","pathname","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2VAQe,SAASA,EAAYC,GAAQ,IAAD,EAChBC,IAAMC,SAAS,IADC,mBACnCC,EADmC,KAC5BC,EAD4B,KAEpCC,EAAQL,EAAMK,MACbC,EAAON,EAAPM,IAaP,OANAC,qBAAU,WACLD,GACHF,EAASE,KAER,CAACA,QAGH,yBAAKE,GAAIR,EAAMQ,IACd,wBAAIC,UAAU,kBAAkBT,EAAMU,OACtC,kBAACC,EAAA,EAAD,CAAaC,MAAM,YAClB,kBAACC,EAAA,EAAD,CAAYC,aAAYd,EAAMU,MAAQK,KAAMf,EAAMU,MAAOP,MAAOA,EAAOa,SAfrD,SAACC,GACrBb,EAASa,EAAMC,OAAOf,OACtBH,EAAMmB,aAAaF,EAAMC,OAAOf,MAAOE,KAcnCL,EAAMoB,QAAQC,KAAI,SAACC,EAAIC,GAAL,OAAW,kBAACC,EAAA,EAAD,CAAkBf,UAAU,gBAAgBgB,IAAKF,EAAGpB,MAAOmB,EAAII,QAAS,kBAACC,EAAA,EAAD,MAAUC,MAAON,QAExH,yBAAKb,UAAU,+BACd,2BAAIT,EAAM6B,Y,sBC1BA,SAASC,EAAS9B,GAAQ,IAAD,EACbC,IAAMC,UAAS,GADF,mBAChCC,EADgC,KACzBC,EADyB,KAEjCC,EAAQL,EAAMK,MAOpB,OACE,kBAAC0B,EAAA,EAAD,KACC,kBAACP,EAAA,EAAD,CACCE,QAAS,kBAACM,EAAA,EAAD,CAAUvB,UAAU,gBAAgBwB,QAAS9B,EAAOa,SAR5C,SAACC,GACrBb,EAASa,EAAMC,OAAOe,SACtBjC,EAAMkC,eAAejB,EAAMC,OAAOe,QAAS5B,IAM6CoB,IAAKzB,EAAMyB,IAC7EtB,MAAOH,EAAMe,OAChCa,MAAO5B,EAAMU,S,wCCXZyB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,YAAa,CACZC,SAAU,KAEXC,GAAG,CACFC,SAAS,YAII,SAASC,EAAU1C,GACjC,IAAM2C,EAAUR,IADwB,EAEdlC,IAAMC,SAAS,IAFD,mBAEjCC,EAFiC,KAE1BC,EAF0B,OAGhBH,IAAMC,UAAS,GAHC,mBAGjC0C,EAHiC,KAG3BC,EAH2B,KAKjCxC,EAAmBL,EAAnBK,MAAOyC,EAAY9C,EAAZ8C,SAEdvC,qBAAU,WACLuC,GACH1C,EAAS0C,KAER,CAACA,IAgBJ,OACC,6BACC,wBAAIrC,UAAW,kBAAmBT,EAAMU,OACxC,kBAACC,EAAA,EAAD,CAAaF,UAAWkC,EAAQL,YAAaS,WAAU/C,EAAMgD,QAC5D,kBAACC,EAAA,EAAD,CAAYzC,GAAG,gCAAf,8CACA,kBAAC0C,EAAA,EAAD,CACCC,QAAQ,+BACR3C,GAAI,SAAWH,EACfuC,KAAMA,EACNQ,QAjBgB,SAACnC,GACpB4B,GAAQ,IAiBLQ,OAde,SAACpC,GACnB4B,GAAQ,IAcL1C,MAAOA,EACPa,SA1BiB,SAACC,GACrBb,EAASa,EAAMC,OAAOf,OACbH,EAAMoB,QAAQkC,QAAQrC,EAAMC,OAAOf,OAC5CH,EAAMuD,mBAAmBtC,EAAMC,OAAOf,MAAOE,KAwBzCL,EAAMoB,QAAQC,KAAI,SAACC,EAAIC,GAAL,OAAW,kBAACiC,EAAA,EAAD,CAAU/C,UAAWkC,EAAQH,GAAIf,IAAKF,EAAGpB,MAAOmB,EAAGnB,OAAQmB,EAAGP,Y,sBCrD3FoB,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,YAAa,CACZmB,cAAe,QAIF,SAASC,EAAQ1D,GAC/B,IAAM2C,EAAUR,IACVwB,EAAQ3D,EAAM4D,WAEhBC,EAAS7D,EAAM6D,OAAOxC,KAAI,SAACC,EAAIC,GAgBlC,MAfgB,CACfR,KAAMf,EAAM8D,MAAMvC,GAClBwC,WAAY,GACZC,KAAM,CAAC1C,GACP2C,KAAM,UACNC,OAAQ,SACRP,MAAOA,EAAMpC,GACb4C,SAAU,CACTvC,MAAO,CACNwC,MAAM,EACNC,UAAWrE,EAAM8D,MAAMvC,GACvB+C,SAAU,YAOdT,EAAOU,KAAK,CACXR,WAAY,GACZC,KAAM,CAAChE,EAAMwE,QACbP,KAAM,UACNC,OAAQ,UAERP,MAAO,MACP/B,MAAO,CACNwC,MAAM,EACNE,SAAU,MACVD,UAAW,SACXI,WAAY,QAGbN,SAAU,CACTvC,MAAO,CACNwC,MAAM,EACNC,UAAW,SACXC,SAAU,UAkCb,OACC,yBAAK7D,UAAWkC,EAAQL,aACvB,kBAAC,IAAD,CAAcoC,MAAO,CAACC,OAAQ,SAAUC,OAhCjB,CACxBjB,MAAOA,EACPkB,OAAQ,CACPT,MAAM,EACNJ,KAAMhE,EAAM8D,MACZgB,OAAQ,aACRH,OAAQ,OACRI,IAAK,KACLC,KAAM,GAEPC,KAAM,CACLC,EAAG,EACHH,IAAK,MACLJ,OAAQ,MACRQ,OAAQ,OAETC,MAAO,CACNrE,KAAM,IACNsE,KAAM,EACNC,IAAK,GAGNC,MAAO,CACNxE,KAAM,IACNsE,KAAM,EACNC,IAAK,GAGNE,OAAQ3B,M,qBCxEV4B,IAASC,cAVc,CACtBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIhB,IAAMC,EAAW,IAAIV,IAASW,KAAKC,mBACtBC,EAAmB,WAC/Bb,IAASW,OAAOG,gBAAgBJ,IAGpBK,EAAoB,WAChCf,IAASW,OAAOI,qBAGFf,IAAf,E,kBChBe,SAASgB,EAAiBzG,GACxC,IAAI6B,EAAU7B,EAAM0G,aAAarF,KAAI,SAACC,EAAIC,GACzC,GAA2B,gEAAvBvB,EAAM2G,QAAQpF,GAAGR,MAA6C,0DAAvBf,EAAM2G,QAAQpF,GAAGR,KAG3D,OAFa6F,OAAOC,OAAO7G,EAAM2G,QAAQpF,IAAID,MAO/C,OADAO,EAAUA,EAAQiF,QAAO,SAAAxF,GAAE,YAAQyF,GAAJzF,KAE7B,kBAAC0F,EAAA,EAAD,CACGvG,UAAW,KACXwG,IAAG,sDAAiDjH,EAAMe,KAAvD,QACHmG,MAAOrF,EAAQsF,KAAK,KAAK,OAAlB,gWAA+FnH,EAAMoH,cAE5G,6BACC,kBAACC,EAAA,EAAD,CACCC,KAAM,WAEP,gKCrBP,IAAMnF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACxCC,YAAa,CACZqC,OAAQ,QAIK,SAAS4C,EAAYvH,GACnBmC,IAAhB,IACIqF,EAEAlD,EADAmD,EAAcC,IAEdC,EAAWC,EAAQ,KACjBhE,EAAa5D,EAAM4D,WAErBC,EAAS7D,EAAM6H,YAAYxG,KAAI,SAACC,EAAIC,GACvC,IAAIuG,EAAY,CACf/G,KAAMf,EAAM8D,MAAMvC,GAClBwC,WAAY,GACZC,KAAM,CAAC,CAAC1C,EAAGtB,EAAMK,OAAQ,IACzB4D,KAAM,UACNC,OAAQ,SACRP,MAAOC,EAAWrC,GAClB4C,SAAU,CACTvC,MAAO,CACNwC,MAAM,EACNC,UAAWrE,EAAM8D,MAAMvC,GACvB+C,SAAU,SAgBb,OAVAkD,EAAaG,EAAS,CAAC3H,EAAM+H,aAAc,GAAI,CAACzG,EAAGtB,EAAMK,OAAQ,KAChDoH,IAGhBnD,EAAW,CACVqD,SAHDF,EAAcD,EAIb9G,MAAOV,EAAM8D,MAAMvC,KAIduG,KAGRjE,EAAOU,KAAK,CACXR,WAAY,GACZC,KAAM,CAAC,CAAChE,EAAM+H,aAAc,IAC5B9D,KAAM,UACNN,MAAO,MACPO,OAAQ,UACRtC,MAAO,CACNwC,MAAM,EACNE,SAAU,MACVD,UAAW,SACXI,WAAY,QAGbN,SAAU,CACTvC,MAAO,CACNwC,MAAM,EACNC,UAAW,SACXC,SAAU,UAyBb,OACC,yBAAK7D,UAAU,gBACd,yBAAKA,UAAW,YACf,wBAAIiE,MAAO,CAACsD,UAAW,WAAYhI,EAAMiI,SAAzC,KAAqDC,WAAWlI,EAAM+H,cAAcI,QAAQ,KAE7F,6BACC,yBAAK1H,UAAW,YACf,uBAAGA,UAAW,SACZT,EAAMoI,WAAWC,MAAM,8BAEzB,6BACC,+BAGD,uBAAG5H,UAAW,QAAST,EAAMoI,WAAWE,KAAK,+BAG9C,yBAAK7H,UAAW,UACf,uBAAGA,UAAU,mBAAmB8H,YAAU,eAAezH,aAAW,0BACpE,uBAAGL,UAAU,oBAAoB8H,YAAU,eAAezH,aAAW,2BAEtE,kBAAC,IAAD,CAAc4D,MAAO,CAACC,OAAQ,SAAUlE,UAAS,UAAamE,OAxCxC,CACxBjB,MAAOC,EACPiB,OAAQ,CACPb,KAAMhE,EAAM8D,MACZgB,OAAQ,aACRK,OAAQ,KACRqD,MAAO,QAERpD,MAAO,CACNC,KAAM,EACNC,IAAK,GAENC,MAAO,CACNnB,MAAM,GAEPO,OAAQ,EACRa,OAAQ3B,MA0BP,4BAAK7D,EAAMyI,YAAX,YAA4BnE,EAAS5D,MAArC,MClHY,SAASgI,EAAW1I,GAClC,OAAO,yBAAK2I,IAAG,sDAAiD3I,EAAM4I,UAAvD,QAAwEC,IAAK7I,EAAM4I,Y,aCgB/FjB,EAAWC,EAAQ,KAGjBkB,EAAclB,EAAQ,KA6pBbmB,E,4MA1pBdC,MAAQ,CACPC,UAAW,GACXC,WAAY,GACZC,QAAS,GACT/H,QAAS,GACTgI,YAAa,GACbvF,OAAQ,GACRwF,YAAa,GACbC,WAAY,GACZC,kBAAmB,GACnBC,YAAa,GACblF,SAAU,GACVmF,KAAM,GACNC,WAAY,GACZC,cAAe,GACfC,WAAY,GACZC,SAAU,GACVC,oBAAqB,GACrBC,cAAe,CAAC,MAChBC,oBAAqB,GACrBC,aAAc,GACdC,gBAAiB,GACjBC,eAAgB,GAChBC,kBAAmB,GACnBC,aAAc,GACdC,iBAAiB,EACjBC,aAAa,EACbC,kBAAmB,EACnBC,gBAAiB,EACjB7G,WAAY,GACZ8G,OAAO,EACPC,kBAAmB,EACnBC,iBAAkB,GAClBC,cAAe,GACfC,aAAc,GACdC,UAAW,GACXC,aAAc,GACd5D,YAAa,GACb6D,UAAU,EACVC,KAAK,EACLC,MAAM,EACN1C,YAAa,I,EASd2C,aAAe,WACd,IAAIC,EAAYvC,EAAYwC,MAAMC,OAAOC,SAASC,OAAQ,CAACC,QAAQ,IACnEC,QAAQC,IAAIP,GAGVQ,MAAM,uGAGLC,MAAK,SAAChJ,GAEN,OADA6I,QAAQC,IAAI,WAAY9I,GACjBA,EAASiJ,UAEhBD,MAAK,SAAC9H,GACN2H,QAAQC,IAAI,OAAQ5H,GACpB,EAAKgI,SAAS,CACb/C,UAAWjF,EAAKiF,UAChBC,WAAYlF,EAAKkF,WACjBC,QAASnF,EAAKmF,QACde,gBAAiBlG,EAAKkG,gBACtBT,KAAMzF,EAAKH,OACX6F,WAAY1F,EAAK0F,WACjBH,kBAAmBvF,EAAKuF,kBACxBC,YAAaxF,EAAKwF,YAClBM,oBAAqB9F,EAAK8F,oBAC1BE,oBAAqBhG,EAAK+F,cAC1BJ,cAAe3F,EAAK2F,cACpBa,kBAAmBxG,EAAKwG,kBACxBnB,YAAarF,EAAKqF,YAClBzF,WAAYI,EAAKJ,WACjBgH,iBAAkB5G,EAAK0G,MACvBI,aAAc9G,EAAK8G,aACnB1D,YAAapD,EAAKoD,YAClBqB,YAAazE,EAAKyE,kB,EAQvBwD,WAAa,SAACjI,GACb6H,MAAM,EAAK7C,MAAMG,QAAS,CACzB+C,OAAQ,OACRC,KAAM,UACNC,KAAMC,KAAKC,UAAUtI,GACrBuI,QAAS,CACR,eAAgB,sBAEfT,MACF,SAAAhJ,GAAQ,OAAIA,EAASiJ,UACpBD,MACD,SAAAU,GAAO,OAAIb,QAAQC,IAAIY,MACtBC,OACD,SAAAC,GACCf,QAAQC,IAAI,QAASc,GACrB,EAAKV,SAAS,CAACzB,aAAa,Q,EAK/BoC,eAAiB,SAAC3D,EAAO4D,GAExB,SAASC,EAAWC,GAInB,OAHAA,EAAMC,SAAQ,SAACxL,EAAGlB,GACjByM,EAAMzM,GAAS2M,OAAOF,EAAMzM,OAEtByM,EAGR,IAAIG,EACM,QAANL,EACHK,EAAc,EAAKjE,MAAMC,UAAUiE,MAAM,EAAKlE,MAAMyB,gBAAiB,EAAKzB,MAAMyB,gBAAkB,EAAKzB,MAAMwB,mBAC7F,SAANoC,IACVK,EAAc,EAAKjE,MAAMC,UAAUiE,MAAM,EAAKlE,MAAMyB,gBAAiB,EAAKzB,MAAMyB,gBAAkB,EAAKzB,MAAMwB,oBAI9G,IAAI2C,EAAiBN,EAAWjG,OAAOwG,KAAKpE,EAAM5H,UAKlD,OAJA6L,EAAcJ,EAAWjG,OAAOwG,KAAKH,KAEFnG,QAAO,SAACvF,GAAD,OAAkE,GAA3D4L,EAAe7J,QAAQ,EAAK0F,MAAMyB,gBAAkBlJ,O,EAKtGJ,aAAe,SAACkM,EAAQhN,GACvB,IAAIe,EAAO,eAAO,EAAK4H,MAAM5H,SAC7BA,EAAQf,GAASgN,EACjB,EAAKrB,SAAS,CAAC5K,QAASA,K,EAGzBmC,mBAAqB,SAAC8J,EAAQhN,GAC7B,IAAIe,EAAO,eAAO,EAAK4H,MAAM6B,eAC7BzJ,EAAQf,GAASgN,EACjB,EAAKrB,SAAS,CAACnB,cAAezJ,K,EAG/Bc,eAAiB,SAACoL,EAAWjN,GAC5B,IAAIwD,EAAM,eAAO,EAAKmF,MAAMY,YAC5B/F,EAAOxD,GAASiN,EAChB,EAAKtB,SAAS,CAACpC,WAAY/F,K,EAG5B0J,oBAAsB,SAACvE,GAEtB,IADA,IAAIwE,EACKjM,EAAI,EAAGA,EAAIyH,EAAMW,cAAc8D,OAAS,EAAGlM,IACnDiM,EAAe5G,OAAO8G,OAAO,GAAI1E,EAAMW,cAAcpI,GAAIyH,EAAMW,cAAcpI,EAAI,GAAIiM,GAEtF,OAAOA,G,EAGRG,gBAAkB,SAAC3E,GAClB,IACIS,EAAMmE,EAAYC,EAClBhE,EAFAD,EAAa,GAGbkE,EAAWlH,OAAOmH,QAAQ/E,EAAMY,YAAYvI,KAAI,SAAC2M,GAIpD,GAHAvE,EAAOuE,EAAK,GACZJ,EAAaI,EAAK,GAClBH,EAAc7E,EAAMW,cAAciE,GAC9BnE,EAEH,OADAG,EAAWrF,KAAKsJ,GACTA,KAKTC,GADAA,EAAWA,EAAShH,QAAO,SAAAkH,GAAI,YAAajH,IAATiH,MACfC,UACpB,IAAK,IAAI1M,EAAI,EAAGA,EAAIuM,EAASL,OAAS,EAAGlM,IACpCA,GAAKuM,EAASL,SACjB5D,EAAWjD,OAAO8G,OAAO,GAAII,EAASvM,GAAIuM,EAASvM,EAAI,GAAIsI,IAG7D,OAAOA,G,EAIRqE,WAAa,SAACzE,GACb,IAAI5F,EAAM,eAAO,EAAKmF,MAAMnF,QAC5BA,EAAS4F,EACT,EAAKuC,SAAS,CAACnI,OAAQA,K,EAGxBsK,QAAU,SAACnF,GACV,IAIIqE,EAAQe,EAJRC,EAAgBzH,OAAOmH,QAAQ/E,EAAM5H,SAErCkN,EAAe,GACfC,EAAa,GAGbC,EAAMH,EAAchN,KAAI,SAAC2M,EAAM3N,EAAOyM,GACzCsB,EAAiBJ,EAAK,GACtBX,EAASW,EAAK,GACd,IAAIS,EAAczF,EAAMC,UAAUmF,GAAgBf,OAC9CqB,EAAoB1F,EAAMc,oBAAoBxG,QAAQmL,GAEtDE,EADe3F,EAAMgB,oBAAoB0E,GAAmB1F,EAAM6B,cAAc,IACpDvH,QAAQ+J,GAEpCuB,EAAY5F,EAAMC,UAAUmF,GAAgB3E,KAC5CoF,EAAkB7F,EAAMO,kBAAkBjG,QAAQsL,GAElDE,EADa9F,EAAMQ,YAAYqF,GACVF,GAMzB,OAJA/H,OAAOwG,KAAK0B,GAAS/B,SAAQ,SAACxL,GAC7B+M,EAAa/J,KAAKhD,MAGZuN,KAERR,EAAeA,EAAaS,OACb,YAAO,IAAIC,IAAIV,IAClBvB,SAAQ,SAACiB,EAAM3N,GAC1B,IAAI4O,EAAcX,EAAaY,YAAYlB,GAAQ,EAAKM,EAAahL,QAAQ0K,GAC7EO,EAAWP,GAAQiB,KAGpB,EAAKf,WAAWM,GAChB,EAAKW,eAAeX,EAAKD,I,EAG1BY,eAAiB,SAACX,EAAKD,GACtB,IAAMa,EAAM,EAAKzB,gBAAgB,EAAK3E,OAChCwE,EAAe,EAAKD,oBAAoB,EAAKvE,OAEnDpC,OAAOC,OAAO2H,GAAKzB,SAAQ,SAAAzL,GAC1BsF,OAAOwG,KAAK9L,GAAIyL,SAAQ,SAAAtL,GAEvB+L,EAAa/L,IAAQH,EAAGG,QACbsF,GAAPqI,QACcrI,IAAbqI,EAAI3N,KACP2N,EAAI3N,IAAQH,EAAGG,UAOnBmF,OAAOwG,KAAKmB,GAAYxB,SAAQ,SAAAtL,GAC/B+L,EAAa/L,GAAO+L,EAAa/L,GAAO8M,EAAW9M,WAGzCsF,GAAPqI,GACHxI,OAAOwG,KAAKgC,GAAKrC,SAAQ,SAAAtL,QACAsF,IAApBwH,EAAW9M,KACd2N,EAAI3N,GAAO2N,EAAI3N,GAAO8M,EAAW9M,OAKpC,EAAKuK,SAAS,CAAC5B,kBAAmBxD,OAAOC,OAAO2G,GAAcS,iBACnDlH,GAAPqI,GACH,EAAKC,eAAeD,I,EAItBC,eAAiB,SAAC1F,GAiBjB,IAhBA,IAAInC,EACAC,EAAcC,IACd7D,EAAS,GAGTyL,EAAe,CAClB3H,SAAUD,IACVhH,MAAOgH,KAGJ6H,EAAqB3I,OAAOwG,KAAKzD,GACjC6F,EAAuB5I,OAAOC,OAAO8C,GACnC8F,EAAa,GAGftF,EAAiB,GACdA,EAAesD,OAAS,EAAKzE,MAAMkB,gBAAgBrG,OAAO4J,QAChEtD,EAAe5F,KAAK,IAGrBgL,EAAmBxC,SAAQ,SAACzL,EAAIC,GAC/BsC,EAAOtC,GAAKiO,EAAqBjO,GACjCkO,EAAWlO,GAAK,EAAKyH,MAAMS,KAAKnG,QAAQhC,MAGzC,EAAK0H,MAAMkB,gBAAgBrG,OAAOxC,KAAI,SAAC2M,EAAM0B,GAE5C,IADA,IAAIC,EAAe,GACZA,EAAalC,OAASgC,EAAWhC,QACvCkC,EAAapL,KAAK,GAEnBkL,EAAW1C,SAAQ,SAAC6C,EAAUC,GAC7BF,EAAaE,GAAO7B,EAAK4B,MAG1BzF,EAAeuF,GAAcC,KAG9B,EAAK3D,SAAS,CAAC3B,aAAcF,IAC7B,EAAK6B,SAAS,CAAC1C,WAAYzF,IACvBA,EAAO4J,QAAU,CAAC,GAAGA,QACxBtD,EAAe4C,SAAQ,SAACiB,EAAM3N,EAAOyM,IACpCtF,EAAaG,EAAS9D,EAAQmK,IACbvG,IAGhB6H,EAAe,CACd3H,SAHDF,EAAcD,EAIb9G,MAAO,EAAKsI,MAAMkB,gBAAgB5F,SAASjE,KAG7C,EAAK2L,SAAS,CAAC1H,SAAUgL,Q,EAK5BQ,aAAe,WACd,IAAIC,EAAgB,GAChBC,EAAW,EAAKhH,MAAM8B,aAAazJ,KAAI,SAACC,EAAIC,GAC/C,IAAI0O,EAEAtJ,EAAUC,OAAOC,OAAOvF,GACxB4O,EAAkB,EAAKlH,MAAMU,WAAWpG,QAAQhC,EAAGP,MACnD0I,EAAO,EAAKT,MAAMoB,kBAAkB8F,GAyBxC,OAxBK,GAAKzG,GAAQA,GAAQ,KACzBwG,EAAO,GAEI,IAAOxG,GAAQA,GAAQ,IAClCwG,EAAO,GAEI,GAAOxG,GAAQA,GAAQ,IAClCwG,EAAO,GAEI,GAAOxG,GAAQA,EAAO,GACjCwG,EAAO,EAEG,IAAOxG,GAAQA,EAAO,GAChCwG,EAAO,GAEI,IAAOxG,GAAQA,EAAO,IACjCwG,EAAO,GAEI,KAAOxG,GAAQA,GAAQ,IAClCwG,EAAO,GAIRF,EAAcxO,GAAK0O,EACX,yBAAKxP,UAAW,UACvB,4BAAKa,EAAGP,KAAR,KACA,2BAAI4F,EAAQsJ,QAOd,OAHI,EAAKjH,MAAM+B,UAAU0C,QAAU,GAAGA,QACrC,EAAKzB,SAAS,CAACjB,UAAWgF,IAEpBC,G,EAGRG,YAAc,SAACnH,GACd,IAiBIkC,EAjBEkF,EAAOpH,EAAMgB,oBAAoB,GAAGhB,EAAM6B,cAAc,IAE1DzJ,EAAUwF,OAAOC,OAAOmC,EAAM5H,SAASC,KAAI,SAACC,EAAIC,GACnD,IAAI8O,EAAYD,EAAK9M,QAAQhC,GAC7B,OAAO,eAAEC,EAAI8O,MAGVC,EAAO,CACVC,KAAMvH,EAAM6B,cAAc,GAC1B2F,IAAKxH,EAAM6B,cAAc,GACzB4F,QAASzH,EAAM6B,cAAc,GAC7BzJ,QAASA,EACTsP,gBAAiB1H,EAAMoB,kBACvBvG,OAAQmF,EAAMnF,QAGT8M,EAAKlL,EAASmL,YAAYC,WAAW,iBAEhCpL,EAASW,OAAO0K,YACA,GAAvB,EAAK9H,MAAMiC,WAEdxF,EAASW,OAAO2K,oBAAmB,SAAU5F,GAChC,MAARA,GACHD,EAAMC,EAAKD,IACXyF,EAAGK,IAAI9F,GAAK2F,WAAW,WAAWG,MAAMC,IAAIX,IAE1B,MAARnF,GACV3E,OAIF,EAAKwF,SAAS,CAACf,UAAU,M,EAK3BiG,qBAAuB,WACtBvF,QAAQC,IAAI,0FACZnG,EAASW,OAAO2K,oBAAmB,SAAU5F,GAC5C7E,OAID,EAAK0F,SAAS,CAACb,MAAM,K,kEAzWrBgG,KAAK/F,iB,+BA6WI,IAAD,OAIJgG,EADOD,KAAKnI,MAAMC,UAAUiE,MAAMiE,KAAKnI,MAAMyB,gBAAiB0G,KAAKnI,MAAMyB,gBAAkB0G,KAAKnI,MAAMwB,mBAClFnJ,KAAI,SAACC,EAAIC,GAChC,IAAIM,EACJ,GAAgB,WAAZP,EAAG2C,KAAmB,CAExBpC,GADyC,GAAtC,EAAKmH,MAAMI,YAAY9F,QAAQ/B,GACxB,4LAEA,GAGX,IAAI8P,EAAe/P,EAAG+L,OAElBiE,EADe,EAAKtI,MAAMc,oBACAxG,QAAQ+N,GAClChE,EAAS,EAAKrE,MAAMgB,oBAAoBsH,GAAY,EAAKtI,MAAM6B,cAAc,IACjF,OACC,kBAAC9K,EAAD,CAAaO,IAAK,EAAK0I,MAAM5H,QAAQ,EAAK4H,MAAMyB,gBAAkBlJ,GACrDE,IAAK,EAAKuH,MAAMyB,gBAAkBlJ,EAAGf,GAAIe,EAAGlB,MAAO,EAAK2I,MAAMyB,gBAAkBlJ,EAChFb,MAAOY,EAAGZ,MACVmB,QAASA,EAAST,QAASiM,EAAQlM,aAAc,EAAKA,mBAKlE4G,EAAeoJ,KAAKnI,MAAMU,WAAWrI,KAAI,SAACC,EAAIC,GACjD,OAAQ,kBAACgG,EAAD,CAAalH,MAAOkB,EACP0G,SAAU3G,EACVwC,MAAO,EAAKkF,MAAMkB,gBAAgB5F,SAClCuD,YAAa,EAAKmB,MAAMkB,gBAAgBrG,OACxCD,WAAY,EAAKoF,MAAMpF,WACvB6E,YAAa,EAAKO,MAAMP,YAAYlH,GACpCwG,aAAc,EAAKiB,MAAMoB,kBAAkB7I,GAC7C6G,WAAY,EAAKY,MAAMK,YAAY9H,QAKnDgQ,EAAWJ,KAAKnI,MAAMS,KAAKpI,KAAI,SAACC,EAAIC,GACvC,GAAU,KAAND,EACH,OACC,kBAACQ,EAAD,CAAUL,IAAKF,EAAGlB,MAAOkB,EAAGR,KAAMO,EAAIZ,MAAO,EAAKsI,MAAMU,WAAWnI,GAAIW,eAAgB,EAAKA,oBAoE3FsP,EAAc,WACjBC,SAASrF,KAAKsF,UAAY,EAC1BD,SAASE,gBAAgBD,UAAY,GAGlCE,EAAmB,WACtB,IAAIC,EAAmB,EAAKlF,eAAe,EAAK3D,MAAO,SACvD2C,QAAQC,IAAIiG,GACmB,GAA3BA,EAAiBpE,SACpB,EAAKU,QAAQ,EAAKnF,OAClB,EAAKgD,SAAS,CAACvB,gBAAiB,EAAKzB,MAAMyB,gBAAkB,EAAKzB,MAAMwB,oBACxE,EAAKwB,SAAS,CAAC5C,YAAa,KAC5BoI,MAEA,EAAKxF,SAAS,CAAC5C,YAAayI,IACjBJ,SAASK,eAAT,UAA2BD,EAAiB,KACpDE,eAAe,CACjBC,SAAU,SACVC,MAAO,WAILrL,OAAOC,OAAO,EAAKmC,MAAM5H,SAASqM,QAAU7G,OAAOC,OAAO,EAAKmC,MAAMC,WAAWwE,QAAU7G,OAAOC,OAAO,EAAKmC,MAAM5H,SAASqM,QAAU7G,OAAOC,OAAO,IAAI4G,QAE3J,EAAK0C,YAAY,EAAKnH,QAMpBkJ,EAAuB,WAC1B,IAAIL,EAAmB,EAAKlF,eAAe,EAAK3D,MAAO,SAExB,GAA3B6I,EAAiBpE,QACpB,EAAKU,QAAQ,EAAKnF,OAClB,EAAKgD,SAAS,CAACvB,gBAAiB,EAAKzB,MAAMyB,gBAAkB,EAAKzB,MAAMwB,oBACxE,EAAKwB,SAAS,CAAC5C,YAAa,KAC5BoI,KAEA,EAAKxF,SAAS,CAAC5C,YAAayI,KAe1BnH,EAAQyG,KAAKnI,MAAM4B,iBAAiBvJ,KAAI,SAACC,EAAIC,GAChD,OAAO,kBAACmB,EAAD,CAAWjB,IAAKF,EAAGlB,MAAOkB,EAAGb,MAAOY,EAAGZ,MAAOU,QAASE,EAAG+L,OAC/C9J,mBAAoB,EAAKA,wBA+E5C,OACC,yBAAK9C,UAAU,OAhEF,WACb,GAAwB,GAApB,EAAKuI,MAAM0B,MAAgB,CAC9B,IAAItJ,EAA2C,GAAhC,EAAK4H,MAAM2B,kBAA8B,4LAAwC,GAC5FwH,EAA6B,GAAnB,EAAKnJ,MAAMmC,KAAiB,yBAAK1K,UAAW,gBACxD,gHACA,6HAEA,yBAAKA,UAAW,mBAChB,8nBAEA,4BAAQA,UAAW,eAAgB2R,QAAS,kBAAM,EAAKlB,yBAAvD,wEACA,uSAEF,OACC,yBAAKxM,MAAO,CAACsD,UAAW,WACvB,uBAAGvH,UAAW,+BAAgCW,GAC7CsJ,EACD,yBAAKjK,UAAW,SACd0R,GAEF,yBAAK1R,UAAW,WACf,4BAAQ2R,QAAS,WAhCjBxL,OAAOwG,KAAK,EAAKpE,MAAM6B,eAAe4C,QAAU,EAAKzE,MAAM4B,iBAAiB6C,OAC/E,EAAKzB,SAAS,CACbrB,mBAAmB,EACnBD,OAAO,IAGR,EAAKsB,SAAS,CAACrB,mBAAmB,MA0B/B,0CAIG,GAAI,EAAK3B,MAAMC,UAAUwE,QAAU,EAAKzE,MAAMyB,iBAAuC,GAApB,EAAKzB,MAAM0B,MAAe,CACrG,IAAI2H,EAAS,EAAKrJ,MAAMsB,gBAAkB,GAAK,oIACvCgI,OAA0CvL,GAArC,EAAKiC,MAAMkB,gBAAgBrG,OApJpB,WACjB,IAAI2D,EACA1D,EAAQ,EAAKkF,MAAMkB,gBAAgB5F,SACnCiO,EAAQ,CACX1C,IAAK,GACL9O,KAAM,GACN4G,SAAUD,KAaX,OAXA,EAAKsB,MAAMkB,gBAAgBrG,OAAOxC,KAAI,SAACC,EAAIC,IAC1CiG,EAAaG,EAAS,EAAKqB,MAAMoB,kBAAmB9I,IACnCiR,EAAM5K,WACtB4K,EAAM1C,IAAMtO,EACZgR,EAAMxR,KAAO+C,EAAMvC,GACnBgR,EAAM5K,SAAWH,MAGfZ,OAAOC,OAAO,EAAKmC,MAAMgC,cAAcyC,QAAU7G,OAAOC,OAAO,IAAI4G,QACtE,EAAKzB,SAAS,CAAChB,aAAcuH,IAEtB,6BACP,yBAAK9R,UAAW,eACf,+IACA,mCAAM8R,EAAMxR,KAAZ,SAGD,yBAAKN,UAAW,cACf,kBAACiI,EAAD,CAAY8J,UAAWD,EAAM1C,IAAKjH,UAAW,EAAKI,MAAMkB,gBAAgBuI,mBAAmBF,EAAM1C,OACjG,uBAAG6C,KAAM,EAAK1J,MAAMkB,gBAAgByI,cAAcJ,EAAM1C,MAAxD,+JAGD,yBAAKpP,UAAW,eACf,4RACA,yBAAKA,UAAW,aACd,EAAKqP,iBAIR,yBAAKrP,UAAW,eACf,kBAACgG,EAAD,CACChG,UAAW,KACXM,KAAM,EAAKiI,MAAMkB,gBAAgBuI,mBAAmBF,EAAM1C,KAC1DlJ,QAAS,EAAKqC,MAAM8B,aACpBpE,aAAc,EAAKsC,MAAM+B,UACzB3D,YAAa,EAAK4B,MAAM5B,gBAyGiCwL,GAAgB,GAC3E,OAAQ,6BACNN,EACD,wBAAI7R,UAAU,8BAAd,oIACCsH,EACD,wBAAItH,UAAU,6BAAd,wQACA,wBAAIA,UAAU,8BAAd,8QACA,uBAAGA,UAAU,+BAA+B4R,GAC5C,yBAAK5R,UAAU,iBACb8Q,GAEF,yBAAK7M,MAAO,CAACsD,UAAW,WACvB,4BAAQoK,QAAS,WAjEI,GAFXxL,OAAOC,OAAO,EAAKmC,MAAMY,YACb9C,QAAO,SAAAxF,GAAE,OAAU,GAANA,KACxBmM,QACb,EAAKzB,SAAS,CAAC1B,iBAAiB,IAChC,EAAK6D,QAAQ,EAAKnF,QAElB,EAAKgD,SAAS,CAAC1B,iBAAiB,MA6D9B,kHA7KQ,WACX,GAAI,EAAKtB,MAAMnF,QAAU,GACxB,OACC,6BACC,kBAACH,EAAD,CAASE,WAAY,EAAKoF,MAAMpF,WAAYY,OAAQ,EAAKwE,MAAMM,WACtDxF,MAAO,EAAKkF,MAAMkB,gBAAgB5F,SAClCT,OAAQ,EAAKmF,MAAMqB,gBAyK5BwI,GACD,yBAAKpS,UAAW,mBACf,4OACA,4BAAK,EAAKuI,MAAM1E,SAAS5D,SAQ3B,OAAQ,6BACN0Q,EACD,yBAAK3Q,UAAU,cACd,4BAAQ2R,QAASF,GAAjB,iHACA,4BAAQE,QAASR,GAAjB,6GASDkB,Q,GAppBcC,aCWJC,MAxBf,WAQE,OALAzS,qBAAU,WACT0S,IAAQC,WAAW,kBACnBD,IAAQE,SAAS5H,OAAOC,SAAS4H,SAAW7H,OAAOC,SAASC,UAC3D,IAGD,6BAEE,kBAAC,IAAD,KACC,6BAGC,kBAAC,IAAD,CAAO4H,OAAK,EAACC,KAAM,kBAAmBC,UAAWxK,QCdpCyK,QACW,cAA7BjI,OAAOC,SAASiI,UAEe,UAA7BlI,OAAOC,SAASiI,UAEhBlI,OAAOC,SAASiI,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpC,SAASK,eAAe,SDyHpB,kBAAmBgC,WACrBA,UAAUC,cAAcC,MACrBlI,MAAK,SAAAmI,GACJA,EAAaC,gBAEdzH,OAAM,SAAAC,GACLf,QAAQe,MAAMA,EAAM7K,a","file":"static/js/main.602b7188.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport \"../../App.css\"\r\n\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\tconst {ans} = props\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ans){\r\n\t\t\tsetValue(ans)\r\n\t\t}\r\n\t}, {ans})\r\n\r\n\treturn (\r\n\t\t<div id={props.id}>\r\n\t\t\t<h4 className=\"question_title\">{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title}  name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel className=\"question_item\" key={i} value={el} control={<Radio/>} label={el}/>)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t\t<div className=\"chooseAnswer padding_margin\">\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport \"../../App.css\"\r\n\r\nexport default function CheckBox(props) {\r\n\tconst [value, setValue] = React.useState(false)\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.checked)\r\n\t\tprops.returnAxisName(event.target.checked, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={<Checkbox className=\"question_item\" checked={value} onChange={handleChange} key={props.key}\r\n\t\t\t\t\t                   value={props.name}/>}\r\n\t\t\t\t\tlabel={props.title}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t)\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport \"../../App.css\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n\tli:{\r\n\t\tfontSize:\"15px\",\r\n\t}\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnketsAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className={\"question_title\"}>{props.title}</h4>\r\n\t\t\t<FormControl className={classes.formControl} disabled={props.locked ? true : false}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem className={classes.li} key={i} value={el.value}>{el.name}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tpaddingBottom: 0,\r\n\t},\r\n}));\r\n\r\nexport default function Scatter(props) {\r\n\tconst classes = useStyles();\r\n\tconst color = props.partyColor\r\n\r\n\tlet axises = props.axises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [el],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tsymbol: 'circle',\r\n\t\t\tcolor: color[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 22,\r\n\t\tdata: [props.myAxis],\r\n\t\ttype: 'scatter',\r\n\t\tsymbol: \"diamond\",\r\n\r\n\t\tcolor: 'red',\r\n\t\tlabel: {\r\n\t\t\tshow: true,\r\n\t\t\tposition: 'top',\r\n\t\t\tformatter: \"Я\",\r\n\t\t\tfontWeight: \"bold\"\r\n\r\n\t\t},\r\n\t\temphasis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\tformatter: \"Я\",\r\n\t\t\t\tposition: 'top'\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tconst getOption = () => ({\r\n\t\tcolor: color,\r\n\t\tlegend: {\r\n\t\t\tshow: true,\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\theight: 'auto',\r\n\t\t\ttop: \"3%\",\r\n\t\t\tleft: 0,\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tz: 2,\r\n\t\t\ttop: \"30%\",\r\n\t\t\theight: \"50%\",\r\n\t\t\tbottom: \"10%\"\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tname: 'x',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tname: 'y',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tseries: axises\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.formControl}>\r\n\t\t\t<ReactEcharts style={{height: \"500px\"}} option={getOption()}/>\r\n\t\t</div>\r\n\t);\r\n}","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCxXwvIJFV9BDZFyQZyBs7k9M0GiI1MRuU\",\r\n\tauthDomain: \"testing-a6f79.firebaseapp.com\",\r\n\tdatabaseURL: \"https://testing-a6f79.firebaseio.com\",\r\n\tprojectId: \"testing-a6f79\",\r\n\tstorageBucket: \"testing-a6f79.appspot.com\",\r\n\tmessagingSenderId: \"886214831731\",\r\n\tappId: \"1:886214831731:web:9d4fee09d2061fead04406\",\r\n\tmeasurementId: \"G-DH4LKFT44D\"\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n\tfirebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signInAnonymously = () => {\r\n\tfirebase.auth().signInAnonymously()\r\n}\r\n\r\nexport default firebase;","import React from \"react\";\r\nimport {\r\n\tFacebookShareButton,\r\n\tFacebookIcon,\r\n} from \"react-share\";\r\nimport \"../../App.css\"\r\n\r\nexport default function FacebookShareBtn(props) {\r\n\tlet message = props.indexLegends.map((el, i) =>{\r\n\t\tif (props.legends[i].name==\"Матраимовы\" || props.legends[i].name==\"Жээнбеков\") {\r\n\t\t\tlet legend = Object.values(props.legends[i])[el]\r\n\r\n\t\t\treturn legend\r\n\t\t}\r\n\t})\r\n\r\n\tmessage = message.filter(el => el!=undefined)\r\n\treturn (\r\n\t\t\t<FacebookShareButton\r\n\t\t\t\t\t\tclassName={'fb'}\r\n\t\t\t\t\t\turl={`https://kloop.kg/wp-content/uploads/2020/09/${props.name}.png`}\r\n\t\t\t\t\t\tquote={message.join(' ')+\"\\n\\n\"+`Узнай, какие кыргызские партии солидарны с моей и с твоей позицией:${props.compass_url}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<FacebookIcon\r\n\t\t\t\t\t\t\t\tsize={\"2.1rem\"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p>Поделиться результатом</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FacebookShareButton>\r\n\t)\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\nimport \"../../App.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\theight: 60,\r\n\t},\r\n}));\r\n\r\nexport default function ScatterLine(props) {\r\n\tconst classes = useStyles()\r\n\tlet distanceIs;\r\n\tlet minDistance = Infinity\r\n\tlet position;\r\n\tlet distance = require('euclidean-distance')\r\n\tconst partyColor = props.partyColor\r\n\r\n\tlet axises = props.partyAxises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [[el[props.index], 0]],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tsymbol: \"circle\",\r\n\t\t\tcolor: partyColor[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get min distance\r\n\t\tdistanceIs = distance([props.axisAverrage, 0], [el[props.index], 0])\r\n\t\tif (distanceIs < minDistance) {\r\n\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\tposition = {\r\n\t\t\t\tdistance: minDistance,\r\n\t\t\t\ttitle: props.names[i],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 22,\r\n\t\tdata: [[props.axisAverrage, 0]],\r\n\t\ttype: 'scatter',\r\n\t\tcolor: 'red',\r\n\t\tsymbol: \"diamond\",\r\n\t\tlabel: {\r\n\t\t\tshow: true,\r\n\t\t\tposition: 'top',\r\n\t\t\tformatter: \"Я\",\r\n\t\t\tfontWeight: \"bold\"\r\n\r\n\t\t},\r\n\t\temphasis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\tformatter: \"Я\",\r\n\t\t\t\tposition: 'top'\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tconst getOption = () => ({\r\n\t\tcolor: partyColor,\r\n\t\tlegend: {\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\tbottom: \"0%\",\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tshow: false\r\n\t\t},\r\n\t\theight: 0,\r\n\t\tseries: axises,\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='scatter-line'>\r\n\t\t\t<div className={\"nameAxis\"}>\r\n\t\t\t\t<h5 style={{textAlign: \"center\"}}>{props.axisName}: {parseFloat(props.axisAverrage).toFixed(2)}</h5>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={\"decision\"}>\r\n\t\t\t\t\t<p className={\"minus\"}>\r\n\t\t\t\t\t\t{props.axisPoints.minus}<br/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className={\"plus\"}>{props.axisPoints.plus}<br/>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"arrows\"}>\r\n\t\t\t\t\t<i className=\"em em-arrow_left\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\r\n\t\t\t\t\t<i className=\"em em-arrow_right\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ReactEcharts style={{height: \"250px\"}} className={`scatter`} option={getOption()}/>\r\n\t\t\t</div>\r\n\t\t\t<h4>{props.axisNearest} — \"{position.title}\"</h4>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\n\r\nexport default function PartyImage(props){\r\n\treturn <img src={`https://kloop.kg/wp-content/uploads/2020/09/${props.partyName}.png`} alt={props.partyName}/>\r\n\t}","import React, {Component, useEffect, useState} from \"react\";\r\nimport '../../App.css'\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport CheckBox from \"../form/checkBox\";\r\nimport SelectBox from \"../form/SelectBox\";\r\nimport Scatter from \"../Charts/Scatter\";\r\nimport firebase from \"../../util/firebase\";\r\nimport FacebookShareBtn from \"../shareBtn/facebookShare\";\r\nimport app, {signInWithGoogle, signInAnonymously} from \"../../util/firebase\";\r\nimport {\r\n\tEmailShareButton, FacebookIcon,\r\n\tFacebookShareButton,\r\n\tFacebookShareCount\r\n} from \"react-share\";\r\nimport ScatterLine from \"../axisAverrage/ScatterLineResult\";\r\nimport PartyImage from \"../component/PartyImage\";\r\nimport ReactGA from 'react-ga';\r\nimport {onLog} from \"firebase\";\r\n\r\nlet distance = require('euclidean-distance')\r\n\r\n\r\nconst queryString = require('query-string')\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\tquestions: [],\r\n\t\tmain_title: '',\r\n\t\tgateway: '',\r\n\t\tanswers: {},\r\n\t\tnotAnswered: [],\r\n\t\taxises: {},\r\n\t\taxis_points: [],\r\n\t\ttotal_axis: [],\r\n\t\taxis_title_values: [],\r\n\t\taxis_values: [],\r\n\t\tposition: {},\r\n\t\taxis: [],\r\n\t\taxis_title: [],\r\n\t\taxises_object: [],\r\n\t\taxis_names: {},\r\n\t\tall_axis: {},\r\n\t\tanswer_title_values: [],\r\n\t\tanswer_values: [\"da\"],\r\n\t\tanswer_values_males: [],\r\n\t\tcount_axises: [],\r\n\t\tcompass_compare: {},\r\n\t\tdefault_axises: [],\r\n\t\tall_axis_averrage: [],\r\n\t\tbatch_axises: [],\r\n\t\tonlyTwoCheckBox: true,\r\n\t\tshowAnswers: false,\r\n\t\tquestions_on_page: 0,\r\n\t\tfirst_questions: 0,\r\n\t\tpartyColor: [],\r\n\t\tanket: false,\r\n\t\tanket_all_answers: 1,\r\n\t\tanketa_questions: [],\r\n\t\tanket_answers: [],\r\n\t\taxis_legends: [],\r\n\t\tlegendary: [],\r\n\t\tnearestParty: {},\r\n\t\tcompass_url: \"\",\r\n\t\tsaveData: false,\r\n\t\tuid: false,\r\n\t\tuser: false,\r\n\t\taxisNearest: []\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/final_config_test_0.json')\r\n\t\t\t\tfetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus_test_and_anketa.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tquestions: data.questions,\r\n\t\t\t\t\t\tmain_title: data.main_title,\r\n\t\t\t\t\t\tgateway: data.gateway,\r\n\t\t\t\t\t\tcompass_compare: data.compass_compare,\r\n\t\t\t\t\t\taxis: data.axises,\r\n\t\t\t\t\t\taxis_title: data.axis_title,\r\n\t\t\t\t\t\taxis_title_values: data.axis_title_values,\r\n\t\t\t\t\t\taxis_values: data.axis_values,\r\n\t\t\t\t\t\tanswer_title_values: data.answer_title_values,\r\n\t\t\t\t\t\tanswer_values_males: data.answer_values,\r\n\t\t\t\t\t\taxises_object: data.axises_object,\r\n\t\t\t\t\t\tquestions_on_page: data.questions_on_page,\r\n\t\t\t\t\t\taxis_points: data.axis_points,\r\n\t\t\t\t\t\tpartyColor: data.partyColor,\r\n\t\t\t\t\t\tanketa_questions: data.anket,\r\n\t\t\t\t\t\taxis_legends: data.axis_legends,\r\n\t\t\t\t\t\tcompass_url: data.compass_url,\r\n\t\t\t\t\t\taxisNearest: data.axisNearest,\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\tuploadData = (data) => {\r\n\t\tfetch(this.state.gateway, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'no-cors',\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t}).then(\r\n\t\t\tresponse => response.json()\r\n\t\t).then(\r\n\t\t\tsuccess => console.log(success)\r\n\t\t).catch(\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log(\"Error\", error)\r\n\t\t\t\tthis.setState({showAnswers: true})\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetNotAnswered = (state, pl) => {\r\n\r\n\t\tfunction elToIntArr(array) {\r\n\t\t\tarray.forEach((i, index) => {\r\n\t\t\t\tarray[index] = Number(array[index])\r\n\t\t\t})\r\n\t\t\treturn array\r\n\t\t}\r\n\r\n\t\tlet currentQset;\r\n\t\tif (pl == \"plus\") {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page);\r\n\t\t} else if (pl == 'minus') {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions - this.state.questions_on_page);\r\n\t\t}\r\n\r\n\r\n\t\tlet idxsOfAnswered = elToIntArr(Object.keys(state.answers))\r\n\t\tcurrentQset = elToIntArr(Object.keys(currentQset))\r\n\r\n\t\tlet whichNotAnswered = currentQset.filter((i) => idxsOfAnswered.indexOf(this.state.first_questions + i) == -1);\r\n\r\n\t\treturn whichNotAnswered\r\n\t}\r\n\r\n\treturnAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({answers: answers})\r\n\t}\r\n\r\n\treturnAnketsAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.anket_answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({anket_answers: answers})\r\n\t}\r\n\r\n\treturnAxisName = (axis_name, index) => {\r\n\t\tlet axises = {...this.state.axis_names}\r\n\t\taxises[index] = axis_name\r\n\t\tthis.setState({axis_names: axises})\r\n\t}\r\n\r\n\tgetAxisMainTemplate = (state) => {\r\n\t\tlet mainTemplate;\r\n\t\tfor (let i = 0; i < state.axises_object.length + 1; i++) {\r\n\t\t\tmainTemplate = Object.assign({}, state.axises_object[i], state.axises_object[i + 1], mainTemplate)\r\n\t\t}\r\n\t\treturn mainTemplate;\r\n\t}\r\n\r\n\tgetAxisTemplate = (state) => {\r\n\t\tlet axis_names = [];\r\n\t\tlet axis, axis_index, axis_object;\r\n\t\tlet all_axis;\r\n\t\tlet template = Object.entries(state.axis_names).map((item) => {\r\n\t\t\taxis = item[1]\r\n\t\t\taxis_index = item[0]\r\n\t\t\taxis_object = state.axises_object[axis_index]\r\n\t\t\tif (axis) {\r\n\t\t\t\taxis_names.push(axis_object)\r\n\t\t\t\treturn axis_object\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\ttemplate = template.filter(item => item !== undefined)\r\n\t\ttemplate = template.reverse()\r\n\t\tfor (let i = 0; i < template.length + 1; i++) {\r\n\t\t\tif (i != template.length) {\r\n\t\t\t\tall_axis = Object.assign({}, template[i], template[i + 1], all_axis)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn all_axis;\r\n\t\tthis.setState({all_axis: all_axis})\r\n\t}\r\n\r\n\treturnAxis = (axis) => {\r\n\t\tlet axises = {...this.state.axises}\r\n\t\taxises = axis\r\n\t\tthis.setState({axises: axises})\r\n\t}\r\n\r\n\tgetAxis = (state) => {\r\n\t\tlet state_answers = Object.entries(state.answers);\r\n\r\n\t\tlet axises_names = [];\r\n\t\tlet axis_count = {};\r\n\t\tlet answer, index_question;\r\n\r\n\t\tlet axs = state_answers.map((item, index, array) => {\r\n\t\t\tindex_question = item[0]\r\n\t\t\tanswer = item[1]\r\n\t\t\tlet answer_type = state.questions[index_question].answer;\r\n\t\t\tlet answer_type_index = state.answer_title_values.indexOf(answer_type)\r\n\t\t\tlet answers_item = state.answer_values_males[answer_type_index][state.anket_answers[0]]\r\n\t\t\tlet answer_index = answers_item.indexOf(answer)\r\n\r\n\t\t\tlet axis_type = state.questions[index_question].axis;\r\n\t\t\tlet axis_type_index = state.axis_title_values.indexOf(axis_type)\r\n\t\t\tlet axis_array = state.axis_values[axis_type_index]\r\n\t\t\tlet axis_is = axis_array[answer_index]\r\n\r\n\t\t\tObject.keys(axis_is).forEach((i) => {\r\n\t\t\t\taxises_names.push(i)\r\n\t\t\t})\r\n\r\n\t\t\treturn axis_is;\r\n\t\t})\r\n\t\taxises_names = axises_names.sort()\r\n\t\tlet unique_axis = [...new Set(axises_names)];\r\n\t\tunique_axis.forEach((item, index) => {\r\n\t\t\tlet difference = (axises_names.lastIndexOf(item) + 1) - axises_names.indexOf(item)\r\n\t\t\taxis_count[item] = difference\r\n\t\t})\r\n\r\n\t\tthis.returnAxis(axs);\r\n\t\tthis.getAxisAverage(axs, axis_count);\r\n\t};\r\n\r\n\tgetAxisAverage = (axs, axis_count) => {\r\n\t\tconst sum = this.getAxisTemplate(this.state)\r\n\t\tconst mainTemplate = this.getAxisMainTemplate(this.state)\r\n\r\n\t\tObject.values(axs).forEach(el => {\r\n\t\t\tObject.keys(el).forEach(key => {\r\n\r\n\t\t\t\tmainTemplate[key] += el[key]\r\n\t\t\t\tif (sum != undefined) {\r\n\t\t\t\t\tif (sum[key] !== undefined) {\r\n\t\t\t\t\t\tsum[key] += el[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t\tObject.keys(axis_count).forEach(key => {\r\n\t\t\tmainTemplate[key] = mainTemplate[key] / axis_count[key]\r\n\t\t})\r\n\r\n\t\tif (sum != undefined) {\r\n\t\t\tObject.keys(sum).forEach(key => {\r\n\t\t\t\tif (axis_count[key] !== undefined) {\r\n\t\t\t\t\tsum[key] = sum[key] / axis_count[key]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({all_axis_averrage: Object.values(mainTemplate).reverse()})\r\n\t\tif (sum != undefined) {\r\n\t\t\tthis.distanceEuclid(sum)\r\n\t\t}\r\n\t}\r\n\r\n\tdistanceEuclid = (axises_object) => {\r\n\t\tlet distanceIs;\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet axises = [];\r\n\t\tconst minDistances = [];\r\n\r\n\t\tlet positionInfo = {\r\n\t\t\tdistance: Infinity,\r\n\t\t\ttitle: Infinity,\r\n\t\t}\r\n\r\n\t\tlet axises_object_keys = Object.keys(axises_object);//keys of choosen axises\r\n\t\tlet axises_object_values = Object.values(axises_object);// values of choosen axises\r\n\t\tconst axises_idx = [];\r\n\r\n\r\n\t\tlet default_axises = [];\r\n\t\twhile (default_axises.length < this.state.compass_compare.axises.length) {\r\n\t\t\tdefault_axises.push([])\r\n\t\t}\r\n\r\n\t\taxises_object_keys.forEach((el, i) => {\r\n\t\t\taxises[i] = axises_object_values[i]\r\n\t\t\taxises_idx[i] = this.state.axis.indexOf(el)\r\n\t\t})\r\n\r\n\t\tthis.state.compass_compare.axises.map((item, item_index) => {\r\n\t\t\tlet default_axis = []\r\n\t\t\twhile (default_axis.length < axises_idx.length) {\r\n\t\t\t\tdefault_axis.push(0)\r\n\t\t\t}\r\n\t\t\taxises_idx.forEach((axis_idx, idx) => {\r\n\t\t\t\tdefault_axis[idx] = item[axis_idx]\r\n\t\t\t})\r\n\r\n\t\t\tdefault_axises[item_index] = default_axis\r\n\t\t})\r\n\r\n\t\tthis.setState({batch_axises: default_axises})\r\n\t\tthis.setState({total_axis: axises})\r\n\t\tif (axises.length != [0].length) {\r\n\t\t\tdefault_axises.forEach((item, index, array) => {\r\n\t\t\t\tdistanceIs = distance(axises, item);\r\n\t\t\t\tif (distanceIs < minDistance) {\r\n\t\t\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\t\t\tpositionInfo = {\r\n\t\t\t\t\t\tdistance: minDistance,\r\n\t\t\t\t\t\ttitle: this.state.compass_compare.position[index],\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({position: positionInfo})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tlegendByAxis = () => {\r\n\t\tlet legendsByAxis = []\r\n\t\tlet legendIs = this.state.axis_legends.map((el, i) => {\r\n\t\t\tlet itIs;\r\n\r\n\t\t\tlet legends = Object.values(el)\r\n\t\t\tlet indexAxisByName = this.state.axis_title.indexOf(el.name)\r\n\t\t\tlet axis = this.state.all_axis_averrage[indexAxisByName]\r\n\t\t\tif (-2 <= axis && axis < -1.11) {\r\n\t\t\t\titIs = 1\r\n\r\n\t\t\t} else if (-1.10 < axis && axis < -0.61) {\r\n\t\t\t\titIs = 2\r\n\r\n\t\t\t} else if (-0.60 < axis && axis < -0.21) {\r\n\t\t\t\titIs = 3\r\n\r\n\t\t\t} else if (-0.20 < axis && axis < 0.20) {\r\n\t\t\t\titIs = 4\r\n\r\n\t\t\t} else if (0.21 < axis && axis < 0.60) {\r\n\t\t\t\titIs = 5\r\n\r\n\t\t\t} else if (-0.61 < axis && axis < 1.10) {\r\n\t\t\t\titIs = 6\r\n\r\n\t\t\t} else if (-1.11 < axis && axis <= 2.00) {\r\n\t\t\t\titIs = 7\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlegendsByAxis[i] = itIs\r\n\t\t\treturn (<div className={\"legend\"}>\r\n\t\t\t\t<h5>{el.name}:</h5>\r\n\t\t\t\t<p>{legends[itIs]}</p>\r\n\t\t\t</div>)\r\n\t\t})\r\n\r\n\t\tif (this.state.legendary.length == [].length) {\r\n\t\t\tthis.setState({legendary: legendsByAxis})\r\n\t\t}\r\n\t\treturn legendIs\r\n\t}\r\n\r\n\tsaving_data = (state) => {\r\n\t\tconst answ = state.answer_values_males[0][state.anket_answers[0]]\r\n\r\n\t\tlet answers = Object.values(state.answers).map((el, i) => {\r\n\t\t\tlet answerIdx = answ.indexOf(el)\r\n\t\t\treturn {[i]: answerIdx}\r\n\t\t})\r\n\r\n\t\tlet part = {\r\n\t\t\tmale: state.anket_answers[0],\r\n\t\t\told: state.anket_answers[1],\r\n\t\t\tdistric: state.anket_answers[2],\r\n\t\t\tanswers: answers,\r\n\t\t\taxises_averrage: state.all_axis_averrage,\r\n\t\t\taxises: state.axises,\r\n\t\t}\r\n\r\n\t\tconst db = firebase.firestore().collection(\"users_answers\")\r\n\t\tlet uid;\r\n\t\tlet user = firebase.auth().currentUser\r\n\t\tif (this.state.saveData == false) {\r\n\r\n\t\t\tfirebase.auth().onAuthStateChanged(function (user) {\r\n\t\t\t\tif (user != null) {\r\n\t\t\t\t\tuid = user.uid\r\n\t\t\t\t\tdb.doc(uid).collection('answers').doc().set(part)\r\n\r\n\t\t\t\t} else if (user == null) {\r\n\t\t\t\t\tsignInAnonymously()\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t\tthis.setState({saveData: true})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsignInWithGoogleUser = () => {\r\n\t\tconsole.log('вхожу через гугл')\r\n\t\tfirebase.auth().onAuthStateChanged(function (user) {\r\n\t\t\tsignInWithGoogle()\r\n\r\n\t\t})\r\n\r\n\t\tthis.setState({user: true})\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\r\n\t\tlet qSet = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page)\r\n\t\tlet questionList = qSet.map((el, i) => {\r\n\t\t\tlet message;\r\n\t\t\tif (el.type === 'select') {\r\n\t\t\t\tif (this.state.notAnswered.indexOf(i) != -1) {\r\n\t\t\t\t\tmessage = 'Вам следует ответить на этот вопрос'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage = ''\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet type_answers = el.answer;\r\n\t\t\t\tlet title_values = this.state.answer_title_values;\r\n\t\t\t\tlet index_type = title_values.indexOf(type_answers);\r\n\t\t\t\tlet answer = this.state.answer_values_males[index_type][this.state.anket_answers[0]]\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<RadioButton ans={this.state.answers[this.state.first_questions + i]}\r\n\t\t\t\t\t             key={this.state.first_questions + i} id={i} index={this.state.first_questions + i}\r\n\t\t\t\t\t             title={el.title}\r\n\t\t\t\t\t             message={message} answers={answer} returnAnswer={this.returnAnswer}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet axisAverrage = this.state.axis_title.map((el, i) => {\r\n\t\t\treturn (<ScatterLine index={i}\r\n\t\t\t                     axisName={el}\r\n\t\t\t                     names={this.state.compass_compare.position}\r\n\t\t\t                     partyAxises={this.state.compass_compare.axises}\r\n\t\t\t                     partyColor={this.state.partyColor}\r\n\t\t\t                     axisNearest={this.state.axisNearest[i]}\r\n\t\t\t                     axisAverrage={this.state.all_axis_averrage[i]}\r\n\t\t\t\t\t                 axisPoints={this.state.axis_points[i]}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\tlet checkbox = this.state.axis.map((el, i) => {\r\n\t\t\tif (el != \"b\") {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CheckBox key={i} index={i} name={el} title={this.state.axis_title[i]} returnAxisName={this.returnAxisName}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tlet chart = () => {\r\n\t\t\tif (this.state.axises != {}) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Scatter partyColor={this.state.partyColor} myAxis={this.state.total_axis}\r\n\t\t\t\t\t\t         names={this.state.compass_compare.position}\r\n\t\t\t\t\t\t         axises={this.state.batch_axises}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet resultParty = () => {\r\n\t\t\tlet distanceIs;\r\n\t\t\tlet names = this.state.compass_compare.position\r\n\t\t\tlet minIs = {\r\n\t\t\t\tidx: \"\",\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tdistance: Infinity\r\n\t\t\t}\r\n\t\t\tthis.state.compass_compare.axises.map((el, i) => {\r\n\t\t\t\tdistanceIs = distance(this.state.all_axis_averrage, el)\r\n\t\t\t\tif (distanceIs < minIs.distance) {\r\n\t\t\t\t\tminIs.idx = i\r\n\t\t\t\t\tminIs.name = names[i]\r\n\t\t\t\t\tminIs.distance = distanceIs\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (Object.values(this.state.nearestParty).length == Object.values({}).length) {\r\n\t\t\t\tthis.setState({nearestParty: minIs})\r\n\t\t\t}\r\n\t\t\treturn (<div>\r\n\t\t\t\t<div className={\"resultParty\"}>\r\n\t\t\t\t\t<h3>Ближайшая вам партия:</h3>\r\n\t\t\t\t\t<h3>«{minIs.name}»</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={\"partyImage\"}>\r\n\t\t\t\t\t<PartyImage partyLink={minIs.idx} partyName={this.state.compass_compare.parties_image_name[minIs.idx]}/>\r\n\t\t\t\t\t<a href={this.state.compass_compare.about_parties[minIs.idx]}>Узнайте больше об этой партии</a>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"resultParty\"}>\r\n\t\t\t\t\t<h3>Ваш политический автопортрет на основе ответов:</h3>\r\n\t\t\t\t\t<div className={\"myLegends\"}>\r\n\t\t\t\t\t\t{this.legendByAxis()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={\"facebookBtn\"}>\r\n\t\t\t\t\t<FacebookShareBtn\r\n\t\t\t\t\t\tclassName={'fb'}\r\n\t\t\t\t\t\tname={this.state.compass_compare.parties_image_name[minIs.idx]}\r\n\t\t\t\t\t\tlegends={this.state.axis_legends}\r\n\t\t\t\t\t\tindexLegends={this.state.legendary}\r\n\t\t\t\t\t\tcompass_url={this.state.compass_url}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>)\r\n\t\t}\r\n\r\n\t\tlet topFunction = () => {\r\n\t\t\tdocument.body.scrollTop = 0;\r\n\t\t\tdocument.documentElement.scrollTop = 0;\r\n\t\t}\r\n\r\n\t\tlet nextAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"plus\");\r\n\t\t\tconsole.log(whichNotAnswered)\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions + this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t\tconst el = document.getElementById(`${whichNotAnswered[0]}`)\r\n\t\t\t\tel.scrollIntoView({\r\n\t\t\t\t\tbehavior: \"smooth\",\r\n\t\t\t\t\tblock: \"start\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.values(this.state.answers).length == Object.values(this.state.questions).length && Object.values(this.state.answers).length != Object.values({}).length) {\r\n\r\n\t\t\t\tthis.saving_data(this.state)\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet previousAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"minus\");\r\n\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions - this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet onlyTwoCheckbox = () => {\r\n\t\t\tlet values = Object.values(this.state.axis_names)\r\n\t\t\tconst countTrue = values.filter(el => el == true)\r\n\t\t\tif (countTrue.length == 2) {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: true})\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: false})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet anket = this.state.anketa_questions.map((el, i) => {\r\n\t\t\treturn <SelectBox key={i} index={i} title={el.title} answers={el.answer}\r\n\t\t\t                  returnAnketsAnswer={this.returnAnketsAnswer}/>\r\n\t\t})\r\n\r\n\r\n\t\tlet doneAnket = () => {\r\n\t\t\tif (Object.keys(this.state.anket_answers).length == this.state.anketa_questions.length) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tanket_all_answers: true,\r\n\t\t\t\t\tanket: true\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({anket_all_answers: false})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst forms = () => {\r\n\t\t\tif (this.state.anket == false) {\r\n\t\t\t\tlet answers = (this.state.anket_all_answers == false) ? \"Вам следует ответить на все вопросы\" : \"\"\r\n\t\t\t\tlet userIs = (this.state.user == true) ? (<div className={\"enterByEmail\"}>\r\n\t\t\t\t\t\t<p>Вы вошли через google</p>\r\n\t\t\t\t\t\t<p>Теперь жмите сюда:</p>\r\n\t\t\t\t\t</div>) :\r\n\t\t\t\t\t(<div className={\"notEnterByEmail\"}>\r\n\t\t\t\t\t\t<p>Если хотите в будущем найти единомышленников среди других пользователей, нажмите сюда и у нас сохранятся\r\n\t\t\t\t\t\t\tваше имя и email:</p>\r\n\t\t\t\t\t\t<button className={\"signinGoogle\"} onClick={() => this.signInWithGoogleUser()}>Войти через google</button>\r\n\t\t\t\t\t\t<p>Можно и не входить в Google тогда просто сразу жмите сюда:</p>\r\n\t\t\t\t\t</div>)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<p className={\"chooseAnswer padding_margin\"}>{answers}</p>\r\n\t\t\t\t\t\t{anket}\r\n\t\t\t\t\t\t<div className={\"enter\"}>\r\n\t\t\t\t\t\t\t{userIs}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={\"buttons\"}>\r\n\t\t\t\t\t\t\t<button onClick={() => doneAnket()}>Начать</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} else if (this.state.questions.length <= this.state.first_questions && this.state.anket == true) {\r\nlet result = this.state.onlyTwoCheckBox ? \"\" : \"Выберите только две темы\";\r\n\t\t\t\tlet d = (this.state.compass_compare.axises != undefined) ? resultParty() : \"\";\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t{d}\r\n\t\t\t\t\t<h2 className=\"content-center full-result\">Развёрнутые результаты:</h2>\r\n\t\t\t\t\t{axisAverrage}\r\n\t\t\t\t\t<h1 className=\"content-center moreResult\">Поиграйтесь с результатами! Выведите их на график!</h1>\r\n\t\t\t\t\t<h2 className=\"content-center choose3axis\">Выберите два явления, которые вы хотите отобразить:</h2>\r\n\t\t\t\t\t<p className=\"chooseAnswer padding_margin\">{result}</p>\r\n\t\t\t\t\t<div className=\"choose_axises\">\r\n\t\t\t\t\t\t{checkbox}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{textAlign: \"center\"}}>\r\n\t\t\t\t\t\t<button onClick={() => onlyTwoCheckbox()}>Показать результаты</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{chart()}\r\n\t\t\t\t\t<div className={'result-position'}>\r\n\t\t\t\t\t\t<h3>Ближайшая вам партия по выбранным осям:</h3>\r\n\t\t\t\t\t\t<h2>{this.state.position.title}</h2>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</div>) //in if\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t{questionList}\r\n\t\t\t\t\t<div className=\"pagination\">\r\n\t\t\t\t\t\t<button onClick={previousAndScrollTop}>Предыдущая страница</button>\r\n\t\t\t\t\t\t<button onClick={nextAndScrollTop}>Следующая страница</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>) // in else\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t{forms()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, {useEffect, Component} from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/auth/Home\";\r\nimport ReactGa from \"react-ga\"\r\n\r\nfunction App(){\r\n\r\n\r\n\t\tuseEffect(()=>{\r\n\t\t\tReactGa.initialize('UA-179274271-1')\r\n\t\t\tReactGa.pageview(window.location.pathname + window.location.search)\r\n\t\t},[])\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/*<AuthProvider>*/}\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{/*<PrivateRoute exact path={\"/questionnaire/\"} component={Home}/>*/}\r\n\t\t\t\t\t\t\t{/*<Route exact path={\"/questionnaire/login\"} component={Login}/>*/}\r\n\t\t\t\t\t\t\t<Route exact path={\"/questionnaire/\"} component={Home}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t{/*</AuthProvider>*/}\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}