{"version":3,"sources":["Components/form/radiobutton.js","Components/form/checkBox.js","Components/Charts/Scatter.js","util/firebase.js","Components/shareBtn/facebookShare.js","Components/axisAverrage/ScatterLineResult.js","Components/auth/Home.js","App.js","serviceWorker.js","index.js"],"names":["RadioButton","props","React","useState","value","setValue","index","ans","useEffect","className","title","FormControl","const","RadioGroup","aria-label","name","onChange","event","target","returnAnswer","answers","map","el","i","FormControlLabel","key","control","Radio","label","message","CheckBox","FormGroup","Checkbox","checked","returnAxisName","useStyles","makeStyles","theme","formControl","paddingBottom","Scatter","classes","color","axises","names","symbolSize","data","type","emphasis","show","formatter","position","push","myAxis","option","legend","orient","bottom","width","xAxis","min","max","yAxis","series","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","FacebookShareBtn","axises_title","parseFloat","toFixed","FacebookShareButton","url","shareImage","quote","join","FacebookIcon","size","height","ScatterLine","distanceIs","minDistance","Infinity","distance","require","partyAxises","partyAxis","axisAverrage","axisName","axisPoints","minus","style","plus","queryString","Home","state","questions","main_title","gateway","notAnswered","axis_points","total_axis","axis_title_values","axis_values","axis","axis_title","axises_object","axis_names","all_axis","answer_title_values","answer_values","count_axises","compass_compare","default_axises","all_axis_averrage","batch_axises","onlyTwoCheckBox","showAnswers","questions_on_page","first_questions","downloadData","urlString","parse","window","location","search","decode","console","log","fetch","then","response","json","setState","uploadData","method","mode","body","JSON","stringify","headers","success","catch","error","getNotAnswered","pl","elToIntArr","array","forEach","Number","currentQset","slice","idxsOfAnswered","Object","keys","filter","indexOf","answer","axis_name","getAxisMainTemplate","mainTemplate","length","assign","getAxisTemplate","axis_index","axis_object","template","entries","item","undefined","reverse","returnAxis","getAxis","index_question","state_answers","axises_names","axis_count","axs","answer_type","answer_type_index","answer_index","axis_type","axis_type_index","axis_is","sort","Set","difference","lastIndexOf","getAxisAverage","sum","values","distanceEuclid","positionInfo","axises_object_keys","axises_object_values","axises_idx","item_index","default_axis","axis_idx","idx","saving_data","part","axises_averrage","database","ref","child","this","questionList","type_answers","index_type","checkbox","topFunction","document","scrollTop","documentElement","nextAndScrollTop","whichNotAnswered","previousAndScrollTop","onClick","result","chart","forms","Component","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.418f4cfe.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport \"../../App.css\"\r\n\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\tconst {ans} = props\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ans){\r\n\t\t\tsetValue(ans)\r\n\t\t}\r\n\t}, {ans})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className=\"question_title\">{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title}  name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel className=\"question_item\" key={i} value={el} control={<Radio/>} label={el}/>)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t\t<div className=\"chooseAnswer padding_margin\">\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport \"../../App.css\"\r\n\r\nexport default function CheckBox(props) {\r\n\tconst [value, setValue] = React.useState(false)\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.checked)\r\n\t\tprops.returnAxisName(event.target.checked, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={<Checkbox className=\"question_item\" checked={value} onChange={handleChange} key={props.key}\r\n\t\t\t\t\t                   value={props.name}/>}\r\n\t\t\t\t\tlabel={props.title}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t)\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tpaddingBottom: 0,\r\n\t},\r\n}));\r\n\r\nexport default function Scatter(props) {\r\n\tconst classes = useStyles();\r\n\tconst color = [\"#3B93EA\", \"#F7C906\",\"#00405E\" , \"#552E83\", \"#010667\", \"#009749\"]\r\n\r\n\tlet axises = props.axises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [el],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tcolor: color[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 7,\r\n\t\tdata: [props.myAxis],\r\n\t\ttype: 'scatter',\r\n\t\tcolor: 'black',\r\n\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: \"Я\",\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t})\r\n\tconst getOption = () => ({\r\n\t\tcolor: color,\r\n\t\tlegend:{\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\tbottom: \"0%\",\r\n\t\t\twidth: \"100%\"\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tname: 'x',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tname: 'y',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tseries: axises\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.formControl}>\r\n\t\t\t<ReactEcharts option={getOption()}/>\r\n\t\t</div>\r\n\t);\r\n}","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCxXwvIJFV9BDZFyQZyBs7k9M0GiI1MRuU\",\r\n\tauthDomain: \"testing-a6f79.firebaseapp.com\",\r\n\tdatabaseURL: \"https://testing-a6f79.firebaseio.com\",\r\n\tprojectId: \"testing-a6f79\",\r\n\tstorageBucket: \"testing-a6f79.appspot.com\",\r\n\tmessagingSenderId: \"886214831731\",\r\n\tappId: \"1:886214831731:web:9d4fee09d2061fead04406\",\r\n\tmeasurementId: \"G-DH4LKFT44D\"\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n\tfirebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signInAnonymously = () => {\r\n\tfirebase.auth().signInAnonymously()\r\n}\r\n\r\nexport default firebase;","import React from \"react\";\r\nimport {\r\n\tFacebookShareButton,\r\n\tFacebookIcon,\r\n} from \"react-share\";\r\n\r\nexport default function FacebookShareBtn(props) {\r\n\tlet message = props.axises_title.map((el, i)=> el+': ' + parseFloat(props.axises[i]).toFixed(2))\r\n\treturn (\r\n\t\t\t<FacebookShareButton\r\n\t\t\t\turl={'www.youtube.com'}\r\n\t\t\t\tshareImage={'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/Image_created_with_a_mobile_phone.png/1200px-Image_created_with_a_mobile_phone.png'}\r\n\t\t\t\tquote={\tmessage.join('\\n')}\r\n\t\t\t>\r\n\t\t\t\t<FacebookIcon\r\n\t\t\t\t\tsize={\"2.5rem\"}\r\n\t\t\t\t/>\r\n\t\t\t</FacebookShareButton>\r\n\t)\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\nimport \"../../App.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\theight: 60,\r\n\t},\r\n}));\r\n\r\nexport default function ScatterLine(props) {\r\n\tconst classes = useStyles()\r\n\tlet distanceIs;\r\n\tlet minDistance = Infinity\r\n\tlet position;\r\n\tlet distance = require('euclidean-distance')\r\n\tconst color = [\"#3B93EA\", \"#F7C906\",\"#00405E\" , \"#552E83\", \"#010667\", \"#009749\"]\r\n\r\n\tlet axises = props.partyAxises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [[el[props.index], 0]],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tcolor: color[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get min distance\r\n\t\tdistanceIs = distance([props.axisAverrage, 0], [el[props.index], 0])\r\n\t\tif (distanceIs < minDistance) {\r\n\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\tposition = {\r\n\t\t\t\tdistance: minDistance,\r\n\t\t\t\ttitle: props.names[i],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 7,\r\n\t\tdata: [[props.axisAverrage, 0]],\r\n\t\ttype: 'scatter',\r\n\t\tcolor: 'black',\r\n\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: \"Я\",\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t})\r\n\r\n\r\n\tconst getOption = () => ({\r\n\t\tcolor: color,\r\n\t\tlegend:{\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\tbottom: \"0%\",\r\n\t\t\twidth: \"100%\"\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tshow: false\r\n\t\t},\r\n\t\theight: 0,\r\n\t\tseries: axises,\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='scatter-line'>\r\n\t\t\t<h5>{props.axisName}: {parseFloat(props.axisAverrage).toFixed(2)}</h5>\r\n\t\t\t<div>\r\n\t\t\t\t<p>{props.axisPoints.minus}</p>\r\n\t\t\t\t<ReactEcharts style={{height: \"200px\"}} className={`scatter`} option={getOption()}/>\r\n\t\t\t\t<p>{props.axisPoints.plus}</p>\r\n\t\t\t</div>\r\n\t\t\t<h4>Самая близкая вам партия по взглядам на оси \"{props.axisName}\" — \"{position.title}\"</h4>\r\n\t\t</div>\r\n\t)\r\n}","import React, {Component, useEffect, useState} from \"react\";\r\nimport '../../App.css'\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport CheckBox from \"../form/checkBox\";\r\nimport Scatter from \"../Charts/Scatter\";\r\nimport firebase from \"../../util/firebase\";\r\nimport FacebookShareBtn from \"../shareBtn/facebookShare\";\r\nimport app, {signInWithGoogle, signInAnonymously} from \"../../util/firebase\";\r\nimport {\r\n\tEmailShareButton,\r\n\tFacebookShareButton,\r\n\tFacebookShareCount\r\n} from \"react-share\";\r\nimport ScatterLine from \"../axisAverrage/ScatterLineResult\";\r\n\r\nlet distance = require('euclidean-distance')\r\n\r\n\r\nconst queryString = require('query-string')\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\tquestions: [],\r\n\t\tmain_title: '',\r\n\t\tgateway: '',\r\n\t\tanswers: {},\r\n\t\tnotAnswered: [],\r\n\t\taxises: {},\r\n\t\taxis_points: [],\r\n\t\ttotal_axis: [],\r\n\t\taxis_title_values: [],\r\n\t\taxis_values: [],\r\n\t\tposition: {},\r\n\t\taxis: [],\r\n\t\taxis_title: [],\r\n\t\taxises_object: [],\r\n\t\taxis_names: {},\r\n\t\tall_axis: {},\r\n\t\tanswer_title_values: [],\r\n\t\tanswer_values: [],\r\n\t\tcount_axises: [],\r\n\t\tcompass_compare: {},\r\n\t\tdefault_axises: [],\r\n\t\tall_axis_averrage: [],\r\n\t\tbatch_axises: [],\r\n\t\tonlyTwoCheckBox: true,\r\n\t\tshowAnswers: false,\r\n\t\tquestions_on_page: 0,\r\n\t\tfirst_questions: 0,\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config.json')\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus.json')\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/final_config_test.json')\r\n\t\t\tfetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/final_config_test_0.json')\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus_test.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tquestions: data.questions,\r\n\t\t\t\t\t\tmain_title: data.main_title,\r\n\t\t\t\t\t\tgateway: data.gateway,\r\n\t\t\t\t\t\tcompass_compare: data.compass_compare,\r\n\t\t\t\t\t\taxis: data.axises,\r\n\t\t\t\t\t\taxis_title: data.axis_title,\r\n\t\t\t\t\t\taxis_title_values: data.axis_title_values,\r\n\t\t\t\t\t\taxis_values: data.axis_values,\r\n\t\t\t\t\t\tanswer_title_values: data.answer_title_values,\r\n\t\t\t\t\t\tanswer_values: data.answer_values,\r\n\t\t\t\t\t\taxises_object: data.axises_object,\r\n\t\t\t\t\t\tquestions_on_page: data.questions_on_page,\r\n\t\t\t\t\t\taxis_points: data.axis_points,\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\tuploadData = (data) => {\r\n\t\tfetch(this.state.gateway, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'no-cors',\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t}).then(\r\n\t\t\tresponse => response.json()\r\n\t\t).then(\r\n\t\t\tsuccess => console.log(success)\r\n\t\t).catch(\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log(\"Error\", error)\r\n\t\t\t\tthis.setState({showAnswers: true})\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetNotAnswered = (state, pl) => {\r\n\r\n\t\tfunction elToIntArr(array) {\r\n\t\t\tarray.forEach((i, index) => {\r\n\t\t\t\tarray[index] = Number(array[index])\r\n\t\t\t})\r\n\t\t\treturn array\r\n\t\t}\r\n\r\n\t\tlet currentQset;\r\n\t\tif (pl == \"plus\") {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page);\r\n\t\t} else if (pl == 'minus') {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions - this.state.questions_on_page);\r\n\t\t}\r\n\r\n\r\n\t\tlet idxsOfAnswered = elToIntArr(Object.keys(state.answers))\r\n\t\tcurrentQset = elToIntArr(Object.keys(currentQset))\r\n\r\n\t\tlet whichNotAnswered = currentQset.filter((i) => idxsOfAnswered.indexOf(this.state.first_questions + i) == -1);\r\n\r\n\t\treturn whichNotAnswered\r\n\t}\r\n\r\n\treturnAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({answers: answers})\r\n\t}\r\n\r\n\treturnAxisName = (axis_name, index) => {\r\n\t\tlet axises = {...this.state.axis_names}\r\n\t\taxises[index] = axis_name\r\n\t\tthis.setState({axis_names: axises})\r\n\t}\r\n\r\n\tgetAxisMainTemplate = (state) => {\r\n\t\tlet mainTemplate;\r\n\t\tfor (let i = 0; i < state.axises_object.length + 1; i++) {\r\n\t\t\tmainTemplate = Object.assign({}, state.axises_object[i], state.axises_object[i + 1], mainTemplate)\r\n\t\t}\r\n\t\treturn mainTemplate;\r\n\t}\r\n\r\n\tgetAxisTemplate = (state) => {\r\n\t\tlet axis_names = [];\r\n\t\tlet axis, axis_index, axis_object;\r\n\t\tlet all_axis;\r\n\t\tlet template = Object.entries(state.axis_names).map((item) => {\r\n\t\t\taxis = item[1]\r\n\t\t\taxis_index = item[0]\r\n\t\t\taxis_object = state.axises_object[axis_index]\r\n\t\t\tif (axis) {\r\n\t\t\t\taxis_names.push(axis_object)\r\n\t\t\t\treturn axis_object\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\ttemplate = template.filter(item => item !== undefined)\r\n\t\ttemplate = template.reverse()\r\n\t\tfor (let i = 0; i < template.length + 1; i++) {\r\n\t\t\tif (i != template.length) {\r\n\t\t\t\tall_axis = Object.assign({}, template[i], template[i + 1], all_axis)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn all_axis;\r\n\t\tthis.setState({all_axis: all_axis})\r\n\t}\r\n\r\n\treturnAxis = (axis) => {\r\n\t\tlet axises = {...this.state.axises}\r\n\t\taxises = axis\r\n\t\tthis.setState({axises: axises})\r\n\t}\r\n\r\n\tgetAxis = (state) => {\r\n\t\tlet state_answers = Object.entries(state.answers);\r\n\r\n\t\tlet axises_names = [];\r\n\t\tlet axis_count = {};\r\n\t\tlet answer, index_question;\r\n\r\n\t\tlet axs = state_answers.map((item, index, array) => {\r\n\t\t\tindex_question = item[0]\r\n\t\t\tanswer = item[1]\r\n\t\t\tlet answer_type = state.questions[index_question].answer;\r\n\t\t\tlet answer_type_index = state.answer_title_values.indexOf(answer_type)\r\n\t\t\tlet answers_item = state.answer_values[answer_type_index]\r\n\t\t\tlet answer_index = answers_item.indexOf(answer)\r\n\r\n\t\t\tlet axis_type = state.questions[index_question].axis;\r\n\t\t\tlet axis_type_index = state.axis_title_values.indexOf(axis_type)\r\n\t\t\tlet axis_array = state.axis_values[axis_type_index]\r\n\t\t\tlet axis_is = axis_array[answer_index]\r\n\r\n\t\t\tObject.keys(axis_is).forEach((i) => {\r\n\t\t\t\taxises_names.push(i)\r\n\t\t\t})\r\n\r\n\t\t\treturn axis_is;\r\n\t\t})\r\n\t\taxises_names = axises_names.sort()\r\n\t\tlet unique_axis = [...new Set(axises_names)];\r\n\t\tunique_axis.forEach((item, index) => {\r\n\t\t\tlet difference = (axises_names.lastIndexOf(item) + 1) - axises_names.indexOf(item)\r\n\t\t\taxis_count[item] = difference\r\n\t\t})\r\n\r\n\t\tthis.returnAxis(axs);\r\n\t\tthis.getAxisAverage(axs, axis_count);\r\n\t};\r\n\r\n\tgetAxisAverage = (axs, axis_count) => {\r\n\t\tconst sum = this.getAxisTemplate(this.state)\r\n\t\tconst mainTemplate = this.getAxisMainTemplate(this.state)\r\n\r\n\t\tObject.values(axs).forEach(el => {\r\n\t\t\tObject.keys(el).forEach(key => {\r\n\r\n\t\t\t\tmainTemplate[key] += el[key]\r\n\t\t\t\tif (sum != undefined) {\r\n\t\t\t\t\tif (sum[key] !== undefined) {\r\n\t\t\t\t\t\tsum[key] += el[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t\tObject.keys(axis_count).forEach(key => {\r\n\t\t\tmainTemplate[key] = mainTemplate[key] / axis_count[key]\r\n\t\t})\r\n\r\n\t\tif (sum != undefined) {\r\n\t\t\tObject.keys(sum).forEach(key => {\r\n\t\t\t\tif (axis_count[key] !== undefined) {\r\n\t\t\t\t\tsum[key] = sum[key] / axis_count[key]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({all_axis_averrage: Object.values(mainTemplate).reverse()})\r\n\t\tif (sum != undefined) {\r\n\t\t\tthis.distanceEuclid(sum)\r\n\t\t}\r\n\t}\r\n\r\n\tdistanceEuclid = (axises_object) => {\r\n\t\tlet distanceIs;\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet axises = [];\r\n\t\tconst minDistances = [];\r\n\r\n\t\tlet positionInfo = {\r\n\t\t\tdistance: Infinity,\r\n\t\t\ttitle: Infinity,\r\n\t\t}\r\n\r\n\t\tlet axises_object_keys = Object.keys(axises_object);//keys of choosen axises\r\n\t\tlet axises_object_values = Object.values(axises_object);// values of choosen axises\r\n\t\tconst axises_idx = [];\r\n\r\n\r\n\t\tlet default_axises = [];\r\n\t\twhile (default_axises.length < this.state.compass_compare.axises.length) {\r\n\t\t\tdefault_axises.push([])\r\n\t\t}\r\n\r\n\t\taxises_object_keys.forEach((el, i) => {\r\n\t\t\taxises[i] = axises_object_values[i]\r\n\t\t\taxises_idx[i] = this.state.axis.indexOf(el)\r\n\t\t})\r\n\r\n\t\tthis.state.compass_compare.axises.map((item, item_index) => {\r\n\t\t\tlet default_axis = []\r\n\t\t\twhile (default_axis.length < axises_idx.length) {\r\n\t\t\t\tdefault_axis.push(0)\r\n\t\t\t}\r\n\t\t\taxises_idx.forEach((axis_idx, idx) => {\r\n\t\t\t\tdefault_axis[idx] = item[axis_idx]\r\n\t\t\t})\r\n\r\n\t\t\tdefault_axises[item_index] = default_axis\r\n\t\t})\r\n\r\n\r\n\t\tthis.setState({batch_axises: default_axises})\r\n\t\tthis.setState({total_axis: axises})\r\n\t\tif (axises.length != [0].length) {\r\n\t\t\tdefault_axises.forEach((item, index, array) => {\r\n\t\t\t\tdistanceIs = distance(axises, item);\r\n\t\t\t\tif (distanceIs < minDistance) {\r\n\t\t\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\t\t\tpositionInfo = {\r\n\t\t\t\t\t\tdistance: minDistance,\r\n\t\t\t\t\t\ttitle: this.state.compass_compare.position[index],\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({position: positionInfo})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tsaving_data = (state) => {\r\n\t\tlet part = {\r\n\t\t\t// name: currentUser.email,\r\n\t\t\tanswers: state.answers,\r\n\t\t\taxises_averrage: state.all_axis_averrage,\r\n\t\t\taxises: state.axises,\r\n\t\t}\r\n\r\n\t\tconst rootRef = firebase.database().ref().child('parties')\r\n\t\tconst axisesRef = rootRef.push(part)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tlet qSet = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page)\r\n\r\n\t\tlet questionList = qSet.map((el, i) => {\r\n\t\t\tlet message;\r\n\t\t\tif (el.type === 'select') {\r\n\t\t\t\tif (this.state.notAnswered.indexOf(i) != -1) {\r\n\t\t\t\t\tmessage = 'Вам следуюет ответить на этот вопрос'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage = ''\r\n\t\t\t\t}\r\n\t\t\t\tlet type_answers = el.answer;\r\n\t\t\t\tlet title_values = this.state.answer_title_values;\r\n\t\t\t\tlet index_type = title_values.indexOf(type_answers);\r\n\t\t\t\tlet answer = this.state.answer_values[index_type]\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<RadioButton ans={this.state.answers[this.state.first_questions + i]}\r\n\t\t\t\t\t             key={this.state.first_questions + i} index={this.state.first_questions + i} title={el.title}\r\n\t\t\t\t\t             message={message} answers={answer} returnAnswer={this.returnAnswer}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet axisAverrage = this.state.axis_title.map((el, i) => {\r\n\t\t\treturn (<ScatterLine index={i}\r\n\t\t\t                     axisName={el}\r\n\t\t\t                     names={this.state.compass_compare.position}\r\n\t\t\t                     partyAxises={this.state.compass_compare.axises}\r\n\t\t\t                     axisAverrage={this.state.all_axis_averrage[i]}\r\n\t\t\t                     // axisAverrage={/*this.state.all_axis_averrage[i]*/i}\r\n\t\t\t                     // axisPoints={/*this.state.axis_points[i]*/i}\r\n\t\t\t                     axisPoints={this.state.axis_points[i]}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\r\n\r\n\t\t})\r\n\r\n\t\tlet checkbox = this.state.axis.map((el, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<CheckBox key={i} index={i} name={el} title={this.state.axis_title[i]} returnAxisName={this.returnAxisName}/>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\tlet chart = () => {\r\n\t\t\tif (this.state.axises != {}) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Scatter myAxis={this.state.total_axis} names={this.state.compass_compare.position}\r\n\t\t\t\t\t\t         axises={this.state.batch_axises}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet topFunction = () => {\r\n\t\t\tdocument.body.scrollTop = 0;\r\n\t\t\tdocument.documentElement.scrollTop = 0;\r\n\t\t}\r\n\r\n\t\tlet nextAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"plus\");\r\n\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions + this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet previousAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"minus\");\r\n\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions - this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet onlyTwoCheckbox = () => {\r\n\t\t\tlet values = Object.values(this.state.axis_names)\r\n\t\t\tconst countTrue = values.filter(el => el == true)\r\n\t\t\tif (countTrue.length < 3) {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: true})\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: false})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tconst forms = () => {\r\n\t\t\tif (this.state.questions.length <= this.state.first_questions) {\r\n\t\t\t\tlet result = this.state.onlyTwoCheckBox ? \"\" : \"Выберите только две темы\";\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t<h2 className=\"content-center choose3axis\">Выберите два явления, которые волнуют вас больше всего</h2>\r\n\t\t\t\t\t<p className=\"chooseAnswer padding_margin\">{result}</p>\r\n\t\t\t\t\t<div className=\"choose_axises\">\r\n\t\t\t\t\t\t{checkbox}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={() => onlyTwoCheckbox()}>Показать результаты</button>\r\n\t\t\t\t\t{chart()}\r\n\t\t\t\t\t<div className={'result-position'}>\r\n\t\t\t\t\t\t<h3>Самая близкая для вас партия:</h3>\r\n\t\t\t\t\t\t<h2>{this.state.position.title}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h2 className=\"content-center full-result\">Подробные результаты</h2>\r\n\t\t\t\t\t{axisAverrage}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Previous page</button>\r\n\t\t\t\t\t<button onClick={nextAndScrollTop}>Next page</button>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={() => this.saving_data(this.state)}>Save data</button>\r\n\t\t\t\t</div>) //in if\r\n\t\t\t\t/*return (<div>\r\n\t\t\t\t\t{questionList}\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Previous page</button>\r\n\t\t\t\t\t<button onClick={nextAndScrollTop}>Next page</button>\r\n\t\t\t\t</div>) // in else*/\r\n\t\t\t} else {\r\n\t\t\t\t/*let result = this.state.onlyTwoCheckBox ? \"\" : \"Выберите только две темы\";\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t<h2 className=\"content-center choose3axis\">Выберите два явления, которые волнуют вас больше всего</h2>\r\n\t\t\t\t\t<p className=\"chooseAnswer padding_margin\">{result}</p>\r\n\t\t\t\t\t<div className=\"choose_axises\">\r\n\t\t\t\t\t\t{checkbox}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={() => onlyTwoCheckbox()}>Показать результаты</button>\r\n\t\t\t\t\t{chart()}\r\n\t\t\t\t\t<div className={'result-position'}>\r\n\t\t\t\t\t\t<h3>Самая близкая для вас партия:</h3>\r\n\t\t\t\t\t\t<h2>{this.state.position.title}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h2 className=\"content-center full-result\">Подробные результаты</h2>\r\n\t\t\t\t\t{axisAverrage}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Previous page</button>\r\n\t\t\t\t\t<button onClick={nextAndScrollTop}>Next page</button>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={() => this.saving_data(this.state)}>Save data</button>\r\n\t\t\t\t</div>) //in if*/\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t{questionList}\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Previous page</button>\r\n\t\t\t\t\t<button onClick={nextAndScrollTop}>Next page</button>\r\n\t\t\t\t</div>) // in else\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\r\n\t\t\t\t<button onClick={() => console.log(this.state)}>show state</button>\r\n\t\t\t\t<button onClick={signInWithGoogle}>Sign in with google</button>\r\n\t\t\t\t<FacebookShareBtn axises={this.state.all_axis_averrage} axises_title={this.state.axis_title}/>\r\n\t\t\t\t{forms()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect, Component} from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/auth/Home\";\r\n\r\nclass App extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Route exact path={\"/questionnaire/\"} component={Home}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}