{"version":3,"sources":["Components/form/radiobutton.js","Components/form/checkBox.js","Components/form/SelectBox.js","Components/Charts/Scatter.js","util/firebase.js","Components/shareBtn/facebookShare.js","Components/axisAverrage/ScatterLineResult.js","Components/component/PartyImage.js","Components/auth/Home.js","util/Auth.js","Components/auth/Login.js","util/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["RadioButton","props","React","useState","value","setValue","index","ans","useEffect","className","title","FormControl","const","RadioGroup","aria-label","name","onChange","event","target","returnAnswer","answers","map","el","i","FormControlLabel","key","control","Radio","label","message","CheckBox","FormGroup","Checkbox","checked","returnAxisName","useStyles","makeStyles","theme","formControl","minWidth","li","fontSize","SelectBox","classes","open","setOpen","response","disabled","locked","InputLabel","id","Select","labelId","onClose","onOpen","indexOf","returnAnketsAnswer","MenuItem","paddingBottom","Scatter","color","partyColor","axises","names","symbolSize","data","type","emphasis","show","formatter","position","push","myAxis","style","height","option","legend","orient","top","left","grid","z","bottom","xAxis","min","max","yAxis","series","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","signInAnonymously","FacebookShareBtn","indexLegends","legends","Object","values","filter","undefined","FacebookShareButton","url","quote","join","compass_url","FacebookIcon","size","ScatterLine","distanceIs","minDistance","Infinity","distance","require","partyAxises","partyAxis","axisAverrage","axisName","parseFloat","toFixed","axisPoints","minus","aria-role","plus","width","PartyImage","src","partyName","alt","queryString","Home","state","questions","main_title","gateway","notAnswered","axis_points","total_axis","axis_title_values","axis_values","axis","axis_title","axises_object","axis_names","all_axis","answer_title_values","answer_values","answer_values_males","count_axises","compass_compare","default_axises","all_axis_averrage","batch_axises","onlyTwoCheckBox","showAnswers","questions_on_page","first_questions","anket","anket_all_answers","anketa_questions","anket_answers","axis_legends","legendary","nearestParty","downloadData","urlString","parse","window","location","search","decode","console","log","fetch","then","json","setState","uploadData","method","mode","body","JSON","stringify","headers","success","catch","error","getNotAnswered","pl","elToIntArr","array","forEach","Number","currentQset","slice","idxsOfAnswered","keys","answer","axis_name","getAxisMainTemplate","mainTemplate","length","assign","getAxisTemplate","axis_index","axis_object","template","entries","item","reverse","returnAxis","getAxis","index_question","state_answers","axises_names","axis_count","axs","answer_type","answer_type_index","answer_index","axis_type","axis_type_index","axis_is","sort","Set","difference","lastIndexOf","getAxisAverage","sum","distanceEuclid","positionInfo","axises_object_keys","axises_object_values","axises_idx","item_index","default_axis","axis_idx","idx","legendByAxis","legendsByAxis","legendIs","itIs","indexAxisByName","saving_data","part","male","old","distric","axises_averrage","db","firestore","onAuthStateChanged","user","uid","collection","doc","set","this","questionList","type_answers","index_type","checkbox","topFunction","document","scrollTop","documentElement","nextAndScrollTop","whichNotAnswered","previousAndScrollTop","onClick","app","signOut","result","d","minIs","parties_image_name","resultParty","chart","forms","Component","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","pending","setPending","Provider","withRouter","history","useContext","to","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exact","path","Login","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c16f263.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport \"../../App.css\"\r\n\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst index = props.index\r\n\tconst {ans} = props\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ans){\r\n\t\t\tsetValue(ans)\r\n\t\t}\r\n\t}, {ans})\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className=\"question_title\">{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title}  name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel className=\"question_item\" key={i} value={el} control={<Radio/>} label={el}/>)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t\t<div className=\"chooseAnswer padding_margin\">\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport \"../../App.css\"\r\n\r\nexport default function CheckBox(props) {\r\n\tconst [value, setValue] = React.useState(false)\r\n\tconst index = props.index\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.checked)\r\n\t\tprops.returnAxisName(event.target.checked, index)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tcontrol={<Checkbox className=\"question_item\" checked={value} onChange={handleChange} key={props.key}\r\n\t\t\t\t\t                   value={props.name}/>}\r\n\t\t\t\t\tlabel={props.title}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t)\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport \"../../App.css\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n\tli:{\r\n\t\tfontSize:\"15px\",\r\n\t}\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnketsAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4 className={\"question_title\"}>{props.title}</h4>\r\n\t\t\t<FormControl className={classes.formControl} disabled={props.locked ? true : false}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem className={classes.li} key={i} value={el.value}>{el.name}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tpaddingBottom: 0,\r\n\t},\r\n}));\r\n\r\nexport default function Scatter(props) {\r\n\tconst classes = useStyles();\r\n\tconst color = props.partyColor\r\n\r\n\tlet axises = props.axises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i],\r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [el],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tcolor: color[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 15,\r\n\t\tdata: [props.myAxis],\r\n\t\ttype: 'scatter',\r\n\t\tcolor: 'red',\r\n\t\temphasis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\tformatter: \"Я\",\r\n\t\t\t\tposition: 'top'\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tconst getOption = () => ({\r\n\t\tcolor: color,\r\n\t\tlegend: {\r\n\t\t\tshow: true,\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t height:'auto',\r\n\t\t\ttop: \"3%\",\r\n\t\t\tleft: 0,\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tz: 2,\r\n\t\t\ttop: \"30%\",\r\n\t\t\theight: \"50%\",\r\n\t\t\tbottom: \"10%\"\r\n  },\r\n\t\txAxis: {\r\n\t\t\tname: 'x',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tname: 'y',\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\r\n\t\t},\r\n\t\tseries: axises\r\n\t})\r\n\treturn (\r\n\t\t<div className={classes.formControl}>\r\n\t\t\t<ReactEcharts style={{height: \"500px\"}} option={getOption()}/>\r\n\t\t</div>\r\n\t);\r\n}","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCxXwvIJFV9BDZFyQZyBs7k9M0GiI1MRuU\",\r\n\tauthDomain: \"testing-a6f79.firebaseapp.com\",\r\n\tdatabaseURL: \"https://testing-a6f79.firebaseio.com\",\r\n\tprojectId: \"testing-a6f79\",\r\n\tstorageBucket: \"testing-a6f79.appspot.com\",\r\n\tmessagingSenderId: \"886214831731\",\r\n\tappId: \"1:886214831731:web:9d4fee09d2061fead04406\",\r\n\tmeasurementId: \"G-DH4LKFT44D\"\r\n}\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n\tfirebase.auth().signInWithPopup(provider);\r\n};\r\n\r\nexport const signInAnonymously = () => {\r\n\tfirebase.auth().signInAnonymously()\r\n}\r\n\r\nexport default firebase;","import React from \"react\";\r\nimport {\r\n\tFacebookShareButton,\r\n\tFacebookIcon,\r\n} from \"react-share\";\r\nimport \"../../App.css\"\r\n\r\nexport default function FacebookShareBtn(props) {\r\n\tlet message = props.indexLegends.map((el, i) =>{\r\n\t\tif (props.legends[i].name==\"Матраимовы\" || props.legends[i].name==\"Жээнбеков\") {\r\n\t\t\tlet legend = Object.values(props.legends[i])[el]\r\n\r\n\t\t\treturn legend\r\n\t\t}\r\n\t})\r\n\r\n\tmessage = message.filter(el => el!=undefined)\r\n\treturn (\r\n\t\t\t<FacebookShareButton\r\n\t\t\t\t\t\tclassName={'fb'}\r\n\t\t\t\t\t\turl={`https://kloop.kg/wp-content/uploads/2020/09/${props.name}.png`}\r\n\t\t\t\t\t\tquote={message.join(' ')+\"\\n\\n\"+`Узнай, какие кыргызские партии солидарны с моей и с твоей позицией:${props.compass_url}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<FacebookIcon\r\n\t\t\t\t\t\t\t\tsize={\"2.1rem\"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<p>Поделиться результатом</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FacebookShareButton>\r\n\t)\r\n}","import React from 'react';\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport 'echarts-gl';\r\nimport \"../../App.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\theight: 60,\r\n\t},\r\n}));\r\n\r\nexport default function ScatterLine(props) {\r\n\tconst classes = useStyles()\r\n\tlet distanceIs;\r\n\tlet minDistance = Infinity\r\n\tlet position;\r\n\tlet distance = require('euclidean-distance')\r\n\tconst partyColor = props.partyColor\r\n\r\n\tlet axises = props.partyAxises.map((el, i) => {\r\n\t\tlet partyAxis = {\r\n\t\t\tname: props.names[i], \r\n\t\t\tsymbolSize: 12,\r\n\t\t\tdata: [[el[props.index], 0]],\r\n\t\t\ttype: 'scatter',\r\n\t\t\tcolor: partyColor[i],\r\n\t\t\temphasis: {\r\n\t\t\t\tlabel: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\tformatter: props.names[i],\r\n\t\t\t\t\tposition: 'top'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//get min distance\r\n\t\tdistanceIs = distance([props.axisAverrage, 0], [el[props.index], 0])\r\n\t\tif (distanceIs < minDistance) {\r\n\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\tposition = {\r\n\t\t\t\tdistance: minDistance,\r\n\t\t\t\ttitle: props.names[i],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn partyAxis\r\n\t})\r\n\r\n\taxises.push({\r\n\t\tsymbolSize: 7,\r\n\t\tdata: [[props.axisAverrage, 0]],\r\n\t\ttype: 'scatter',\r\n\t\tcolor: 'black',\r\n\t\temphasis: {\r\n\t\t\tlabel: {\r\n\t\t\t\tshow: true,\r\n\t\t\t\tformatter: \"Я\",\r\n\t\t\t\tposition: 'top'\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tconst getOption = () => ({\r\n\t\tcolor: partyColor,\r\n\t\tlegend: {\r\n\t\t\tdata: props.names,\r\n\t\t\torient: \"horizontal\",\r\n\t\t\tbottom: \"0%\",\r\n\t\t\twidth: \"100%\"\r\n\t\t},\r\n\t\txAxis: {\r\n\t\t\tmin: -2,\r\n\t\t\tmax: 2,\r\n\t\t},\r\n\t\tyAxis: {\r\n\t\t\tshow: false\r\n\t\t},\r\n\t\theight: 0,\r\n\t\tseries: axises,\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className='scatter-line'>\r\n\t\t\t<h5>{props.axisName}: {parseFloat(props.axisAverrage).toFixed(2)}</h5>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={\"decision\"}>\r\n\t\t\t\t\t<p className={\"minus\"}>\r\n\t\t\t\t\t\t{props.axisPoints.minus}<br/>\r\n\t\t\t\t\t\t<i className=\"em em-arrow_left\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className={\"plus\"}>{props.axisPoints.plus}<br/>\r\n\t\t\t\t\t\t<i className=\"em em-arrow_right\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ReactEcharts style={{height: \"200px\"}} className={`scatter`} option={getOption()}/>\r\n\t\t\t</div>\r\n\t\t\t<h4>Самая близкая вам партия по взглядам на оси \"{props.axisName}\" — \"{position.title}\"</h4>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\n\r\nexport default function PartyImage(props){\r\n\treturn <img src={`https://kloop.kg/wp-content/uploads/2020/09/${props.partyName}.png`} alt={props.partyName}/>\r\n\t}","import React, {Component, useEffect, useState} from \"react\";\r\nimport '../../App.css'\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport CheckBox from \"../form/checkBox\";\r\nimport SelectBox from \"../form/SelectBox\";\r\nimport Scatter from \"../Charts/Scatter\";\r\nimport firebase from \"../../util/firebase\";\r\nimport FacebookShareBtn from \"../shareBtn/facebookShare\";\r\nimport app, {signInWithGoogle, signInAnonymously} from \"../../util/firebase\";\r\nimport {\r\n\tEmailShareButton, FacebookIcon,\r\n\tFacebookShareButton,\r\n\tFacebookShareCount\r\n} from \"react-share\";\r\nimport ScatterLine from \"../axisAverrage/ScatterLineResult\";\r\nimport PartyImage from \"../component/PartyImage\";\r\n\r\nlet distance = require('euclidean-distance')\r\n\r\n\r\nconst queryString = require('query-string')\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\tquestions: [],\r\n\t\tmain_title: '',\r\n\t\tgateway: '',\r\n\t\tanswers: {},\r\n\t\tnotAnswered: [],\r\n\t\taxises: {},\r\n\t\taxis_points: [],\r\n\t\ttotal_axis: [],\r\n\t\taxis_title_values: [],\r\n\t\taxis_values: [],\r\n\t\tposition: {},\r\n\t\taxis: [],\r\n\t\taxis_title: [],\r\n\t\taxises_object: [],\r\n\t\taxis_names: {},\r\n\t\tall_axis: {},\r\n\t\tanswer_title_values: [],\r\n\t\tanswer_values: [\"da\"],\r\n\t\tanswer_values_males: [],\r\n\t\tcount_axises: [],\r\n\t\tcompass_compare: {},\r\n\t\tdefault_axises: [],\r\n\t\tall_axis_averrage: [],\r\n\t\tbatch_axises: [],\r\n\t\tonlyTwoCheckBox: true,\r\n\t\tshowAnswers: false,\r\n\t\tquestions_on_page: 0,\r\n\t\tfirst_questions: 0,\r\n\t\tpartyColor: [],\r\n\t\tanket: false,\r\n\t\tanket_all_answers: 1,\r\n\t\tanketa_questions: [],\r\n\t\tanket_answers: [],\r\n\t\taxis_legends: [],\r\n\t\tlegendary:[],\r\n\t\tnearestParty:{},\r\n\t\tcompass_url:\"\"\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus.json')\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus_test.json')\r\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/final_config_test_0.json')\r\n\t\t\t\tfetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus_test_and_anketa.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tquestions: data.questions,\r\n\t\t\t\t\t\tmain_title: data.main_title,\r\n\t\t\t\t\t\tgateway: data.gateway,\r\n\t\t\t\t\t\tcompass_compare: data.compass_compare,\r\n\t\t\t\t\t\taxis: data.axises,\r\n\t\t\t\t\t\taxis_title: data.axis_title,\r\n\t\t\t\t\t\taxis_title_values: data.axis_title_values,\r\n\t\t\t\t\t\taxis_values: data.axis_values,\r\n\t\t\t\t\t\tanswer_title_values: data.answer_title_values,\r\n\t\t\t\t\t\tanswer_values_males: data.answer_values,\r\n\t\t\t\t\t\taxises_object: data.axises_object,\r\n\t\t\t\t\t\tquestions_on_page: data.questions_on_page,\r\n\t\t\t\t\t\taxis_points: data.axis_points,\r\n\t\t\t\t\t\tpartyColor: data.partyColor,\r\n\t\t\t\t\t\tanketa_questions: data.anket,\r\n\t\t\t\t\t\taxis_legends: data.axis_legends,\r\n\t\t\t\t\t\tcompass_url: data.compass_url,\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\tuploadData = (data) => {\r\n\t\tfetch(this.state.gateway, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'no-cors',\r\n\t\t\tbody: JSON.stringify(data),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t}).then(\r\n\t\t\tresponse => response.json()\r\n\t\t).then(\r\n\t\t\tsuccess => console.log(success)\r\n\t\t).catch(\r\n\t\t\terror => {\r\n\t\t\t\tconsole.log(\"Error\", error)\r\n\t\t\t\tthis.setState({showAnswers: true})\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgetNotAnswered = (state, pl) => {\r\n\r\n\t\tfunction elToIntArr(array) {\r\n\t\t\tarray.forEach((i, index) => {\r\n\t\t\t\tarray[index] = Number(array[index])\r\n\t\t\t})\r\n\t\t\treturn array\r\n\t\t}\r\n\r\n\t\tlet currentQset;\r\n\t\tif (pl == \"plus\") {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page);\r\n\t\t} else if (pl == 'minus') {\r\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions - this.state.questions_on_page);\r\n\t\t}\r\n\r\n\r\n\t\tlet idxsOfAnswered = elToIntArr(Object.keys(state.answers))\r\n\t\tcurrentQset = elToIntArr(Object.keys(currentQset))\r\n\r\n\t\tlet whichNotAnswered = currentQset.filter((i) => idxsOfAnswered.indexOf(this.state.first_questions + i) == -1);\r\n\r\n\t\treturn whichNotAnswered\r\n\t}\r\n\r\n\treturnAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({answers: answers})\r\n\t}\r\n\r\n\treturnAnketsAnswer = (answer, index) => {\r\n\t\tlet answers = {...this.state.anket_answers}\r\n\t\tanswers[index] = answer\r\n\t\tthis.setState({anket_answers: answers})\r\n\t}\r\n\r\n\treturnAxisName = (axis_name, index) => {\r\n\t\tlet axises = {...this.state.axis_names}\r\n\t\taxises[index] = axis_name\r\n\t\tthis.setState({axis_names: axises})\r\n\t}\r\n\r\n\tgetAxisMainTemplate = (state) => {\r\n\t\tlet mainTemplate;\r\n\t\tfor (let i = 0; i < state.axises_object.length + 1; i++) {\r\n\t\t\tmainTemplate = Object.assign({}, state.axises_object[i], state.axises_object[i + 1], mainTemplate)\r\n\t\t}\r\n\t\treturn mainTemplate;\r\n\t}\r\n\r\n\tgetAxisTemplate = (state) => {\r\n\t\tlet axis_names = [];\r\n\t\tlet axis, axis_index, axis_object;\r\n\t\tlet all_axis;\r\n\t\tlet template = Object.entries(state.axis_names).map((item) => {\r\n\t\t\taxis = item[1]\r\n\t\t\taxis_index = item[0]\r\n\t\t\taxis_object = state.axises_object[axis_index]\r\n\t\t\tif (axis) {\r\n\t\t\t\taxis_names.push(axis_object)\r\n\t\t\t\treturn axis_object\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\ttemplate = template.filter(item => item !== undefined)\r\n\t\ttemplate = template.reverse()\r\n\t\tfor (let i = 0; i < template.length + 1; i++) {\r\n\t\t\tif (i != template.length) {\r\n\t\t\t\tall_axis = Object.assign({}, template[i], template[i + 1], all_axis)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn all_axis;\r\n\t\tthis.setState({all_axis: all_axis})\r\n\t}\r\n\r\n\treturnAxis = (axis) => {\r\n\t\tlet axises = {...this.state.axises}\r\n\t\taxises = axis\r\n\t\tthis.setState({axises: axises})\r\n\t}\r\n\r\n\tgetAxis = (state) => {\r\n\t\tlet state_answers = Object.entries(state.answers);\r\n\r\n\t\tlet axises_names = [];\r\n\t\tlet axis_count = {};\r\n\t\tlet answer, index_question;\r\n\r\n\t\tlet axs = state_answers.map((item, index, array) => {\r\n\t\t\tindex_question = item[0]\r\n\t\t\tanswer = item[1]\r\n\t\t\tlet answer_type = state.questions[index_question].answer;\r\n\t\t\tlet answer_type_index = state.answer_title_values.indexOf(answer_type)\r\n\t\t\tlet answers_item = state.answer_values_males[answer_type_index][state.anket_answers[0]]\r\n\t\t\tlet answer_index = answers_item.indexOf(answer)\r\n\r\n\t\t\tlet axis_type = state.questions[index_question].axis;\r\n\t\t\tlet axis_type_index = state.axis_title_values.indexOf(axis_type)\r\n\t\t\tlet axis_array = state.axis_values[axis_type_index]\r\n\t\t\tlet axis_is = axis_array[answer_index]\r\n\r\n\t\t\tObject.keys(axis_is).forEach((i) => {\r\n\t\t\t\taxises_names.push(i)\r\n\t\t\t})\r\n\r\n\t\t\treturn axis_is;\r\n\t\t})\r\n\t\taxises_names = axises_names.sort()\r\n\t\tlet unique_axis = [...new Set(axises_names)];\r\n\t\tunique_axis.forEach((item, index) => {\r\n\t\t\tlet difference = (axises_names.lastIndexOf(item) + 1) - axises_names.indexOf(item)\r\n\t\t\taxis_count[item] = difference\r\n\t\t})\r\n\r\n\t\tthis.returnAxis(axs);\r\n\t\tthis.getAxisAverage(axs, axis_count);\r\n\t};\r\n\r\n\tgetAxisAverage = (axs, axis_count) => {\r\n\t\tconst sum = this.getAxisTemplate(this.state)\r\n\t\tconst mainTemplate = this.getAxisMainTemplate(this.state)\r\n\r\n\t\tObject.values(axs).forEach(el => {\r\n\t\t\tObject.keys(el).forEach(key => {\r\n\r\n\t\t\t\tmainTemplate[key] += el[key]\r\n\t\t\t\tif (sum != undefined) {\r\n\t\t\t\t\tif (sum[key] !== undefined) {\r\n\t\t\t\t\t\tsum[key] += el[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\r\n\r\n\t\tObject.keys(axis_count).forEach(key => {\r\n\t\t\tmainTemplate[key] = mainTemplate[key] / axis_count[key]\r\n\t\t})\r\n\r\n\t\tif (sum != undefined) {\r\n\t\t\tObject.keys(sum).forEach(key => {\r\n\t\t\t\tif (axis_count[key] !== undefined) {\r\n\t\t\t\t\tsum[key] = sum[key] / axis_count[key]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({all_axis_averrage: Object.values(mainTemplate).reverse()})\r\n\t\tif (sum != undefined) {\r\n\t\t\tthis.distanceEuclid(sum)\r\n\t\t}\r\n\t}\r\n\r\n\tdistanceEuclid = (axises_object) => {\r\n\t\tlet distanceIs;\r\n\t\tlet minDistance = Infinity;\r\n\t\tlet axises = [];\r\n\t\tconst minDistances = [];\r\n\r\n\t\tlet positionInfo = {\r\n\t\t\tdistance: Infinity,\r\n\t\t\ttitle: Infinity,\r\n\t\t}\r\n\r\n\t\tlet axises_object_keys = Object.keys(axises_object);//keys of choosen axises\r\n\t\tlet axises_object_values = Object.values(axises_object);// values of choosen axises\r\n\t\tconst axises_idx = [];\r\n\r\n\r\n\t\tlet default_axises = [];\r\n\t\twhile (default_axises.length < this.state.compass_compare.axises.length) {\r\n\t\t\tdefault_axises.push([])\r\n\t\t}\r\n\r\n\t\taxises_object_keys.forEach((el, i) => {\r\n\t\t\taxises[i] = axises_object_values[i]\r\n\t\t\taxises_idx[i] = this.state.axis.indexOf(el)\r\n\t\t})\r\n\r\n\t\tthis.state.compass_compare.axises.map((item, item_index) => {\r\n\t\t\tlet default_axis = []\r\n\t\t\twhile (default_axis.length < axises_idx.length) {\r\n\t\t\t\tdefault_axis.push(0)\r\n\t\t\t}\r\n\t\t\taxises_idx.forEach((axis_idx, idx) => {\r\n\t\t\t\tdefault_axis[idx] = item[axis_idx]\r\n\t\t\t})\r\n\r\n\t\t\tdefault_axises[item_index] = default_axis\r\n\t\t})\r\n\r\n\t\tthis.setState({batch_axises: default_axises})\r\n\t\tthis.setState({total_axis: axises})\r\n\t\tif (axises.length != [0].length) {\r\n\t\t\tdefault_axises.forEach((item, index, array) => {\r\n\t\t\t\tdistanceIs = distance(axises, item);\r\n\t\t\t\tif (distanceIs < minDistance) {\r\n\t\t\t\t\tminDistance = distanceIs;\r\n\r\n\t\t\t\t\tpositionInfo = {\r\n\t\t\t\t\t\tdistance: minDistance,\r\n\t\t\t\t\t\ttitle: this.state.compass_compare.position[index],\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({position: positionInfo})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tlegendByAxis = () => {\r\n\t\t\tlet legendsByAxis=[]\r\n\t\t\tlet legendIs =this.state.axis_legends.map((el, i) => {\r\n\t\t\t\tlet itIs;\r\n\t\t\t\tlet legends = Object.values(el)\r\n\t\t\t\tlet indexAxisByName = this.state.axis_title.indexOf(el.name)\r\n\t\t\t\tlet axis = this.state.all_axis_averrage[indexAxisByName]\r\n\t\t\t\tif (-2 <= axis && axis < -1.11) {\r\n\t\t\t\t\titIs = 1\r\n\r\n\t\t\t\t} else if (-1.10 < axis && axis < -0.61) {\r\n\t\t\t\t\titIs = 2\r\n\r\n\t\t\t\t} else if (-0.60 < axis && axis < -0.21) {\r\n\t\t\t\t\titIs = 3\r\n\r\n\t\t\t\t} else if (-0.20 < axis && axis < 0.20) {\r\n\t\t\t\t\titIs = 4\r\n\r\n\t\t\t\t} else if (0.21 < axis && axis < 0.60) {\r\n\t\t\t\t\titIs = 5\r\n\r\n\t\t\t\t} else if (-0.61 < axis && axis < 1.10) {\r\n\t\t\t\t\titIs = 6\r\n\r\n\t\t\t\t} else if (-1.11 < axis && axis <= 2.00) {\r\n\t\t\t\t\titIs = 7\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlegendsByAxis[i] = itIs\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t<p>{legends[itIs]}</p>\r\n\t\t\t\t</div>)\r\n\t\t\t})\r\n\r\n\t\tif (this.state.legendary.length == [].length){\r\n\t\t\tthis.setState({legendary: legendsByAxis})\r\n\t\t}\r\n\t\t\treturn legendIs\r\n\t\t}\r\n\r\n\r\n\tsaving_data = (state) => {\r\n\t\tlet part = {\r\n\t\t\tmale: state.anket_answers[0],\r\n\t\t\told: state.anket_answers[1],\r\n\t\t\tdistric: state.anket_answers[2],\r\n\t\t\tanswers: state.answers,\r\n\t\t\taxises_averrage: state.all_axis_averrage,\r\n\t\t\taxises: state.axises,\r\n\t\t}\r\n\t\tconst db = firebase.firestore()\r\n\r\n\t\tfirebase.auth().onAuthStateChanged(function (user) {\r\n\t\t\tif (user) {\r\n\t\t\t\tlet uid = user.uid;\r\n\t\t\t\tdb.collection(\"users_answers\").doc(uid).collection('answers').doc().set(part)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tlet qSet = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page)\r\n\t\tlet questionList = qSet.map((el, i) => {\r\n\t\t\tlet message;\r\n\t\t\tif (el.type === 'select') {\r\n\t\t\t\tif (this.state.notAnswered.indexOf(i) != -1) {\r\n\t\t\t\t\tmessage = 'Вам следуюет ответить на этот вопрос'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmessage = ''\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet type_answers = el.answer;\r\n\t\t\t\tlet title_values = this.state.answer_title_values;\r\n\t\t\t\tlet index_type = title_values.indexOf(type_answers);\r\n\t\t\t\tlet answer = this.state.answer_values_males[index_type][this.state.anket_answers[0]]\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<RadioButton ans={this.state.answers[this.state.first_questions + i]}\r\n\t\t\t\t\t             key={this.state.first_questions + i} index={this.state.first_questions + i} title={el.title}\r\n\t\t\t\t\t             message={message} answers={answer} returnAnswer={this.returnAnswer}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet axisAverrage = this.state.axis_title.map((el, i) => {\r\n\t\t\tif (el != \"Внутренняя политика\") {\r\n\t\t\t\treturn (<ScatterLine index={i}\r\n\t\t\t\t                     axisName={el}\r\n\t\t\t\t                     names={this.state.compass_compare.position}\r\n\t\t\t\t                     partyAxises={this.state.compass_compare.axises}\r\n\t\t\t\t                     partyColor={this.state.partyColor}\r\n\t\t\t\t\t\taxisAverrage={this.state.all_axis_averrage[i]}\r\n\t\t\t\t\t\t                 // axisAverrage={/*this.state.all_axis_averrage[i]*/i}\r\n\t\t\t\t\t\t                 axisPoints={this.state.axis_points[i]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet checkbox = this.state.axis.map((el, i) => {\r\n\t\t\tif (el != \"b\") {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CheckBox key={i} index={i} name={el} title={this.state.axis_title[i]} returnAxisName={this.returnAxisName}/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\r\n\t\tlet chart = () => {\r\n\t\t\tif (this.state.axises != {}) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Scatter partyColor={this.state.partyColor} myAxis={this.state.total_axis}\r\n\t\t\t\t\t\t         names={this.state.compass_compare.position}\r\n\t\t\t\t\t\t         axises={this.state.batch_axises}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet resultParty = () => {\r\n\t\t\tlet distanceIs;\r\n\t\t\tlet names = this.state.compass_compare.position\r\n\t\t\tlet minIs = {\r\n\t\t\t\tidx: \"\",\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tdistance: Infinity\r\n\t\t\t}\r\n\t\t\tthis.state.compass_compare.axises.map((el, i) => {\r\n\t\t\t\tdistanceIs = distance(this.state.all_axis_averrage, el)\r\n\t\t\t\tif (distanceIs < minIs.distance) {\r\n\t\t\t\t\tminIs.idx = i\r\n\t\t\t\t\tminIs.name = names[i]\r\n\t\t\t\t\tminIs.distance = distanceIs\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif(Object.values(this.state.nearestParty).length == Object.values({}).length) {\r\n\t\t\t\tthis.setState({nearestParty: minIs})\r\n\t\t\t}\r\n\t\t\treturn (<div>\r\n\t\t\t\t<div className={\"resultParty\"}>\r\n\t\t\t\t\t<h3>Ближайшая вам партия:</h3>\r\n\t\t\t\t\t<h3>«{minIs.name}»</h3>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={\"partyImage\"}>\r\n\t\t\t\t\t<PartyImage partyName={this.state.compass_compare.parties_image_name[minIs.idx]}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"resultParty\"}>\r\n\t\t\t\t\t<h3>Ваш политический автопортрет на основе ответов:</h3>\r\n\t\t\t\t\t<div className={\"myLegends\"}>\r\n\t\t\t\t\t\t{this.legendByAxis()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={\"facebookBtn\"}>\r\n\t\t\t\t\t<FacebookShareBtn\r\n\t\t\t\t\t\tclassName={'fb'}\r\n\t\t\t\t\t\tname={this.state.compass_compare.parties_image_name[minIs.idx]}\r\n\t\t\t\t\t\tlegends={this.state.axis_legends}\r\n\t\t\t\t\t\tindexLegends={this.state.legendary}\r\n\t\t\t\t\t\tcompass_url={this.state.compass_url}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>)\r\n\t\t}\r\n\r\n\t\tlet topFunction = () => {\r\n\t\t\tdocument.body.scrollTop = 0;\r\n\t\t\tdocument.documentElement.scrollTop = 0;\r\n\t\t}\r\n\r\n\t\tlet nextAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"plus\");\r\n\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions + this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet previousAndScrollTop = () => {\r\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"minus\");\r\n\r\n\t\t\tif (whichNotAnswered.length == 0) {\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t\tthis.setState({first_questions: this.state.first_questions - this.state.questions_on_page});\r\n\t\t\t\tthis.setState({notAnswered: []})\r\n\t\t\t\ttopFunction();\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet onlyTwoCheckbox = () => {\r\n\t\t\tlet values = Object.values(this.state.axis_names)\r\n\t\t\tconst countTrue = values.filter(el => el == true)\r\n\t\t\tif (countTrue.length == 2) {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: true})\r\n\t\t\t\tthis.getAxis(this.state)\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({onlyTwoCheckBox: false})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet anket = this.state.anketa_questions.map((el, i) => {\r\n\t\t\treturn <SelectBox key={i} index={i} title={el.title} answers={el.answer}\r\n\t\t\t                  returnAnketsAnswer={this.returnAnketsAnswer}/>\r\n\t\t})\r\n\r\n\r\n\t\tlet doneAnket = () => {\r\n\t\t\tif (Object.keys(this.state.anket_answers).length == this.state.anketa_questions.length) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tanket_all_answers: true,\r\n\t\t\t\t\tanket: true\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({anket_all_answers: false})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst forms = () => {\r\n\t\t\tif (this.state.anket == false) {\r\n\t\t\t\tlet answers = (this.state.anket_all_answers == false) ? \"Вам следуюет ответить на все вопросы\" : \"\"\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p className={\"chooseAnswer padding_margin\"}>{answers}</p>\r\n\t\t\t\t\t\t{anket}\r\n\t\t\t\t\t\t<button onClick={() => doneAnket()}>Начать!</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} else if (this.state.questions.length <= this.state.first_questions && this.state.anket == true) {\r\n\t\t\t\tlet result = this.state.onlyTwoCheckBox ? \"\" : \"Выберите только две темы\";\r\n\t\t\t\tlet d = (this.state.compass_compare.axises != undefined) ? resultParty() : \"\";\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t{d}\r\n\t\t\t\t\t<h1 className=\"content-center moreResult\">Более подробные результаты:</h1>\r\n\t\t\t\t\t<h2 className=\"content-center choose3axis\">Выберите два явления, которые волнуют вас больше всего</h2>\r\n\t\t\t\t\t<p className=\"chooseAnswer padding_margin\">{result}</p>\r\n\t\t\t\t\t<div className=\"choose_axises\">\r\n\t\t\t\t\t\t{checkbox}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={() => onlyTwoCheckbox()}>Показать результаты</button>\r\n\t\t\t\t\t{chart()}\r\n\t\t\t\t\t<div className={'result-position'}>\r\n\t\t\t\t\t\t<h3>Самая близкая для вас партия:</h3>\r\n\t\t\t\t\t\t<h2>{this.state.position.title}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h2 className=\"content-center full-result\">Ещё более подробные результаты:</h2>\r\n\t\t\t\t\t{axisAverrage}\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Previous page</button>\r\n\t\t\t\t\t<button onClick={nextAndScrollTop}>Next page</button>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button onClick={() => this.saving_data(this.state)}>Save data</button>\r\n\t\t\t\t</div>) //in if\r\n\t\t\t} else {\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t{questionList}\r\n\t\t\t\t\t<button onClick={previousAndScrollTop}>Previous page</button>\r\n\t\t\t\t\t<button onClick={nextAndScrollTop}>Next page</button>\r\n\t\t\t\t</div>) // in else\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<button onClick={() => app.auth().signOut()}>Sign out</button>\r\n\t\t\t\t<button onClick={() => console.log(this.state)}>show state</button>\r\n\t\t\t\t<button onClick={signInWithGoogle}>Sign in with google</button>\r\n\t\t\t\t{forms()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport app from \"./firebase.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n    });\r\n  }, []);\r\n\r\n  if(pending){\r\n    return <>Loading...</>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};","import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app, {signInWithGoogle, signInAnonymously} from \"../../util/firebase\";\r\nimport { AuthContext } from \"../../util/Auth.js\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={\"/questionnaire/\" + window.location.search} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      <button onClick={signInWithGoogle}>Sign-in with Google</button>\r\n      <button onClick={signInAnonymously}>Sign-in Anonymously</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withRouter(Login);","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/questionnaire/login\" + window.location.search} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, {useState, useEffect, Component} from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/auth/Home\";\r\nimport Login from \"./Components/auth/Login\";\r\nimport PrivateRoute from \"./util/PrivateRoute\";\r\nimport {AuthProvider} from \"./util/Auth\";\r\n\r\nclass App extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AuthProvider>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<PrivateRoute exact path={\"/questionnaire/\"} component={Home}/>\r\n\t\t\t\t\t\t\t<Route exact path={\"/questionnaire/login\"} component={Login}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</AuthProvider>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}